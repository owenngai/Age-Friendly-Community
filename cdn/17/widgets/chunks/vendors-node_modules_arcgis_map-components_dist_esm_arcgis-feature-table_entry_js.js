"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_map-components_dist_esm_arcgis-feature-table_entry_js"],{

/***/ "./node_modules/@arcgis/map-components/dist/esm/arcgis-feature-table.entry.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/arcgis-feature-table.entry.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_feature_table: () => (/* binding */ ArcgisFeatureTable)
/* harmony export */ });
/* harmony import */ var _index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-6e172aac.js */ "./node_modules/@arcgis/map-components/dist/esm/index-6e172aac.js");
/* harmony import */ var _index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-0bc55ca5.js */ "./node_modules/@arcgis/map-components/dist/esm/index-0bc55ca5.js");
/* harmony import */ var _component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./component-utils-23194f7c.js */ "./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js");
/* harmony import */ var _disconnected_6cf1c100_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./disconnected-6cf1c100.js */ "./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js");
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */





const featureTableCss = ".arcgis-feature-table{width:100%;height:100%}";

const ArcgisFeatureTable = class {
    constructor(hostRef) {
        (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisFeatureTableReady = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisFeatureTableReady", 7);
        this.featureTableSelectionChange = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "featureTableSelectionChange", 7);
        this._watchHandles = [];
        this.referenceElement = undefined;
        this.activeFilters = undefined;
        this.activeSortOrders = [];
        this.attachmentsEnabled = false;
        this.autoRefreshEnabled = true;
        this.columnReorderingEnabled = true;
        this.columns = undefined;
        this.editingEnabled = false;
        this.filterGeometry = undefined;
        this.hiddenFields = true;
        this.highlightEnabled = true;
        this.highlightIds = undefined;
        this.layer = undefined;
        this.menuConfig = undefined;
        this.multiSortEnabled = false;
        this.pageSize = 50;
        this.returnGeometryEnabled = false;
        this.state = undefined;
        this.tableTemplate = undefined;
        this.timeZone = undefined;
        this.itemId = undefined;
        this.url = undefined;
        this.visibleElementsHeader = true;
        this.visibleElementsMenu = true;
        this.visibleElementsSelectionColumn = true;
        this.visibleElementsColumnMenus = true;
        this.visibleElementsMenuItemsClearSelection = true;
        this.visibleElementsMenuItemsDeleteSelection = true;
        this.visibleElementsMenuItemsRefreshData = true;
        this.visibleElementsMenuItemsSelectedRecordsShowAllToggle = true;
        this.visibleElementsMenuItemsToggleColumns = true;
        this.visibleElementsMenuItemsZoomToSelection = true;
        this.view = undefined;
        this.widget = undefined;
    }
    referenceElementWatcher(value) {
        void (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.r)(this, value);
    }
    attachmentsEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.attachmentsEnabled = value;
        }
    }
    autoRefreshEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.autoRefreshEnabled = value;
        }
    }
    columnReorderingEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.columnReorderingEnabled = value;
        }
    }
    editingEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.editingEnabled = value;
        }
    }
    filterGeometryWatcher(value) {
        if (value && this.widget) {
            this.widget.filterGeometry = value;
        }
    }
    hiddenFieldsWatcher(value) {
        if (value && this.widget) {
            this.widget.hiddenFields = value;
        }
    }
    highlightEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.highlightEnabled = value;
        }
    }
    highlightIdsWatcher(value) {
        if (value && this.widget) {
            this.widget.highlightIds = value;
        }
    }
    layerWatcher(value) {
        if (value && this.widget) {
            this.widget.layer = value;
        }
        else if (!value) {
            this.widget.layer = null;
        }
    }
    menuConfigWatcher(value) {
        if (value && this.widget) {
            this.widget.menuConfig = value;
        }
    }
    multiSortEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.multiSortEnabled = value;
        }
    }
    pageSizeWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.pageSize = value;
        }
    }
    returnGeometryEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.returnGeometryEnabled = value;
        }
    }
    tableTemplateWatcher(value) {
        if (value && this.widget) {
            this.widget.tableTemplate = value;
        }
    }
    timeZoneWatcher(value) {
        if (this.widget) {
            this.widget.timeZone = value;
        }
    }
    async itemIdWatcher(value, old) {
        if ((0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.i)(value)) {
            this.layer = null;
        }
        else if (value && value !== old) {
            const layer = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.z)({
                portalItem: {
                    id: value,
                },
            });
            this.layer = layer;
        }
    }
    async urlWatcher(value, old) {
        if (value && value !== old) {
            const layer = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.z)({ url: value });
            this.layer = layer;
        }
    }
    visibleElementsHeaderWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                header: value,
            };
        }
    }
    visibleElementsMenuWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                menu: value,
            };
        }
    }
    visibleElementsSelectionColumnWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                selectionColumn: value,
            };
        }
    }
    visibleElementsColumnMenusWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                columnMenus: value,
            };
        }
    }
    visibleElementsMenuItemsClearSelectionWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                menuItems: {
                    ...this.widget.visibleElements.menuItems,
                    clearSelection: value,
                },
            };
        }
    }
    visibleElementsMenuItemsDeleteSelectionWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                menuItems: {
                    ...this.widget.visibleElements.menuItems,
                    deleteSelection: value,
                },
            };
        }
    }
    visibleElementsMenuItemsRefreshDataWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                menuItems: {
                    ...this.widget.visibleElements.menuItems,
                    refreshData: value,
                },
            };
        }
    }
    visibleElementsMenuItemsSelectedRecordsShowAllToggleWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                menuItems: {
                    ...this.widget.visibleElements.menuItems,
                    selectedRecordsShowAllToggle: value,
                },
            };
        }
    }
    visibleElementsMenuItemsToggleColumnsWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                menuItems: {
                    ...this.widget.visibleElements.menuItems,
                    toggleColumns: value,
                },
            };
        }
    }
    visibleElementsMenuItemsZoomToSelectionWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                menuItems: {
                    ...this.widget.visibleElements.menuItems,
                    zoomToSelection: value,
                },
            };
        }
    }
    viewWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.view = value;
        }
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    async clearSelectionFilter() {
        this.widget?.clearSelectionFilter();
    }
    async deleteSelection(showWarningPrompt) {
        await this.widget?.deleteSelection(showWarningPrompt);
    }
    async filterBySelection() {
        this.widget?.filterBySelection();
    }
    async findColumn(fieldName) {
        return this.widget?.findColumn(fieldName);
    }
    async hideColumn(fieldName) {
        this.widget?.hideColumn(fieldName);
    }
    async refresh() {
        await this.widget?.refresh();
    }
    async scrollToIndex(index) {
        this.widget?.scrollToIndex(index);
    }
    async showAllColumns() {
        this.widget?.showAllColumns();
    }
    async showColumn(fieldName) {
        this.widget?.showColumn(fieldName);
    }
    async sortColumn(path, direction) {
        this.widget?.sortColumn(path, direction);
    }
    async zoomToSelection() {
        this.widget?.zoomToSelection();
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    async componentDidLoad() {
        const params = await this._createParams();
        const widget = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.A)(params);
        this.widget = widget;
        await this._addWatchers();
        this._proxyEvents();
        this._addContainer();
        this.arcgisFeatureTableReady.emit();
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
    }
    disconnectedCallback() {
        (0,_disconnected_6cf1c100_js__WEBPACK_IMPORTED_MODULE_3__.o)(this);
    }
    render() {
        return (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "arcgis-feature-table", ref: (el) => (this.childElem = el) });
    }
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    _addContainer() {
        this.widget.container = this.childElem;
    }
    async _addWatchers() {
        const { watch } = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.i)();
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.activeFilters, (value) => (this.activeFilters = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.activeSortOrders, (value) => (this.activeSortOrders = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.columns, (value) => (this.columns = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.state, (value) => (this.state = value), {
            initial: true,
        }));
    }
    async _createParams() {
        const params = {};
        params.visibleElements = {
            header: this.visibleElementsHeader,
            menu: this.visibleElementsMenu,
            selectionColumn: this.visibleElementsSelectionColumn,
            columnMenus: this.visibleElementsColumnMenus,
            menuItems: {
                clearSelection: this.visibleElementsMenuItemsClearSelection,
                deleteSelection: this.visibleElementsMenuItemsDeleteSelection,
                refreshData: this.visibleElementsMenuItemsRefreshData,
                selectedRecordsShowAllToggle: this.visibleElementsMenuItemsSelectedRecordsShowAllToggle,
                toggleColumns: this.visibleElementsMenuItemsToggleColumns,
                zoomToSelection: this.visibleElementsMenuItemsZoomToSelection,
            },
        };
        if (this.view) {
            params.view = this.view;
        }
        if (this.attachmentsEnabled !== undefined) {
            params.attachmentsEnabled = this.attachmentsEnabled;
        }
        if (this.autoRefreshEnabled !== undefined) {
            params.autoRefreshEnabled = this.autoRefreshEnabled;
        }
        if (this.columnReorderingEnabled !== undefined) {
            params.columnReorderingEnabled = this.columnReorderingEnabled;
        }
        if (this.editingEnabled !== undefined) {
            params.editingEnabled = this.editingEnabled;
        }
        if (this.filterGeometry !== undefined) {
            params.filterGeometry = this.filterGeometry;
        }
        if (this.hiddenFields !== undefined) {
            params.hiddenFields = this.hiddenFields;
        }
        if (this.highlightEnabled !== undefined) {
            params.highlightEnabled = this.highlightEnabled;
        }
        if (this.highlightIds !== undefined) {
            params.highlightIds = this.highlightIds;
        }
        if (this.menuConfig !== undefined) {
            params.menuConfig = this.menuConfig;
        }
        if (this.multiSortEnabled !== undefined) {
            params.multiSortEnabled = this.multiSortEnabled;
        }
        if (this.pageSize !== undefined) {
            params.pageSize = this.pageSize;
        }
        if (this.tableTemplate !== undefined) {
            params.tableTemplate = this.tableTemplate;
        }
        if (this.timeZone !== undefined) {
            params.timeZone = this.timeZone;
        }
        // Handle loading a layer, url, or itemId
        if (this.layer !== undefined) {
            params.layer = this.layer;
        }
        else if (this.url) {
            params.layer = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.z)({ url: this.url });
        }
        else if (this.itemId) {
            params.layer = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.z)({
                portalItem: {
                    id: this.itemId,
                },
            });
        }
        return params;
    }
    _proxyEvents() {
        this.widget?.highlightIds.on("change", (e) => this.featureTableSelectionChange.emit(e));
    }
    get el() { return (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get watchers() { return {
        "referenceElement": ["referenceElementWatcher"],
        "attachmentsEnabled": ["attachmentsEnabledWatcher"],
        "autoRefreshEnabled": ["autoRefreshEnabledWatcher"],
        "columnReorderingEnabled": ["columnReorderingEnabledWatcher"],
        "editingEnabled": ["editingEnabledWatcher"],
        "filterGeometry": ["filterGeometryWatcher"],
        "hiddenFields": ["hiddenFieldsWatcher"],
        "highlightEnabled": ["highlightEnabledWatcher"],
        "highlightIds": ["highlightIdsWatcher"],
        "layer": ["layerWatcher"],
        "menuConfig": ["menuConfigWatcher"],
        "multiSortEnabled": ["multiSortEnabledWatcher"],
        "pageSize": ["pageSizeWatcher"],
        "returnGeometryEnabled": ["returnGeometryEnabledWatcher"],
        "tableTemplate": ["tableTemplateWatcher"],
        "timeZone": ["timeZoneWatcher"],
        "itemId": ["itemIdWatcher"],
        "url": ["urlWatcher"],
        "visibleElementsHeader": ["visibleElementsHeaderWatcher"],
        "visibleElementsMenu": ["visibleElementsMenuWatcher"],
        "visibleElementsSelectionColumn": ["visibleElementsSelectionColumnWatcher"],
        "visibleElementsColumnMenus": ["visibleElementsColumnMenusWatcher"],
        "visibleElementsMenuItemsClearSelection": ["visibleElementsMenuItemsClearSelectionWatcher"],
        "visibleElementsMenuItemsDeleteSelection": ["visibleElementsMenuItemsDeleteSelectionWatcher"],
        "visibleElementsMenuItemsRefreshData": ["visibleElementsMenuItemsRefreshDataWatcher"],
        "visibleElementsMenuItemsSelectedRecordsShowAllToggle": ["visibleElementsMenuItemsSelectedRecordsShowAllToggleWatcher"],
        "visibleElementsMenuItemsToggleColumns": ["visibleElementsMenuItemsToggleColumnsWatcher"],
        "visibleElementsMenuItemsZoomToSelection": ["visibleElementsMenuItemsZoomToSelectionWatcher"],
        "view": ["viewWatcher"]
    }; }
};
ArcgisFeatureTable.style = featureTableCss;




/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ addHandles),
/* harmony export */   b: () => (/* binding */ isNotSameViewpoint),
/* harmony export */   c: () => (/* binding */ checkForView),
/* harmony export */   d: () => (/* binding */ checkForExpand),
/* harmony export */   e: () => (/* binding */ isNotSameCamera),
/* harmony export */   f: () => (/* binding */ isNotSameEnvironment),
/* harmony export */   g: () => (/* binding */ isValidInteger),
/* harmony export */   i: () => (/* binding */ isNullOrEmptyString),
/* harmony export */   r: () => (/* binding */ referenceElementHelper)
/* harmony export */ });
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */
function checkForExpand(element) {
    const expandRef = element.el.closest("arcgis-expand") ?? element.expandElem;
    if (expandRef?.widget) {
        element.view = expandRef.view;
        expandRef.widget.content = element.childElem ?? element.el;
        // TODO: Update to be expandIcon = widget.icon, not ready yet in 4.27next
        if (!expandRef.expandIcon) {
            expandRef.widget.expandIcon = element.widget ? element.widget.icon : element?.icon;
        }
        return true;
    }
    if (expandRef) {
        const widgetHandler = () => {
            expandRef.removeEventListener("arcgisExpandReady", widgetHandler, false);
            element.view = expandRef.view;
            expandRef.widget.content = element.childElem ?? element.el;
            if (!expandRef.expandIcon) {
                expandRef.widget.expandIcon = element.widget ? element.widget.icon : element?.icon;
            }
        };
        expandRef.addEventListener("arcgisExpandReady", widgetHandler, false);
        return true;
    }
    return false;
}

//--------------------------------------------------------------------------
//
//  Public Methods
//
//--------------------------------------------------------------------------
function addHandles(element, handle) {
    if (Array.isArray(handle)) {
        element._watchHandles = [...element._watchHandles, ...handle];
    }
    else {
        element._watchHandles.push(handle);
    }
}
function checkForView(element) {
    let isUsingReferenceElement = false;
    if (!checkForExpand(element)) {
        let viewRef = element.el.closest("arcgis-map") ?? element.el.closest("arcgis-scene");
        if (!viewRef && typeof element.referenceElement === "string") {
            viewRef = document.querySelector(element.referenceElement);
            isUsingReferenceElement = true;
        }
        if (viewRef?.view) {
            element.view = viewRef.view;
            const el = element.childElem ?? element.el;
            if (!isUsingReferenceElement) {
                element.view.ui.add(el, element.position);
            }
        }
        else if (viewRef) {
            waitForViewHandler(viewRef, element, isUsingReferenceElement);
        }
    }
    else {
        const viewRef = element.el.closest("arcgis-map") ?? element.el.closest("arcgis-scene");
        if (viewRef?.view) {
            element.view = viewRef.view;
        }
        else if (viewRef) {
            const handler = () => {
                viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
                element.view = viewRef.view;
            };
            viewRef.addEventListener("arcgisViewReadyChange", handler, false);
        }
    }
}
function isNullOrEmptyString(value) {
    return value === undefined || value === null || value === "";
}
function isValidInteger(value) {
    return value != null && value % 1 === 0;
}
function isNotSameCamera(camera, camera2) {
    return (camera2 === undefined ||
        camera.position !== camera2.position ||
        camera.heading !== camera2.heading ||
        camera.tilt !== camera2.tilt);
}
function isNotSameEnvironment(environment, environment2) {
    return (environment2 === undefined ||
        environment2.atmosphereEnabled !== environment.atmosphereEnabled ||
        environment2.lighting.date !== environment.lighting.date ||
        environment2.lighting.directShadowsEnabled !==
            environment.lighting.directShadowsEnabled ||
        environment2.lighting.cameraTrackingEnabled !==
            environment.lighting.cameraTrackingEnabled ||
        environment2.lighting.date !== environment.lighting.date ||
        environment2.lighting.displayUTCOffset !==
            environment.lighting.displayUTCOffset);
}
function isNotSameViewpoint(viewpoint, viewpoint2) {
    return (viewpoint2 === undefined ||
        viewpoint.targetGeometry !== viewpoint2.targetGeometry ||
        viewpoint.rotation !== viewpoint2.rotation ||
        viewpoint.scale !== viewpoint2.scale);
}
async function updateForView(viewStr) {
    const viewRef = document.querySelector(viewStr);
    return await new Promise((resolve) => {
        if (viewRef?.view !== undefined) {
            resolve(viewRef.view);
        }
        else if (viewRef) {
            const handler = () => {
                viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
                resolve(viewRef.view);
            };
            viewRef.addEventListener("arcgisViewReadyChange", handler, false);
        }
    });
}
async function referenceElementHelper(element, refElement) {
    if (refElement === undefined)
        return;
    else if (typeof refElement === "string") {
        element.view = await updateForView(refElement);
    }
    else if (element.widget) {
        element.view = refElement.view;
    }
}
//--------------------------------------------------------------------------
//
//  Private Methods
//
//--------------------------------------------------------------------------
function waitForViewHandler(viewRef, element, isUsingRefernceElement) {
    const handler = () => {
        viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
        element.view = viewRef.view;
        if (!isUsingRefernceElement) {
            element.view.ui.add(element.childElem ?? element.el, element.position);
        }
    };
    viewRef.addEventListener("arcgisViewReadyChange", handler, false);
}




/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   o: () => (/* binding */ onDisconnectedHelper)
/* harmony export */ });
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */
function onDisconnectedHelper(element) {
    if (element.childElem) {
        if (!element.el.isConnected) {
            if (element.view) {
                element.view.ui.remove(element.childElem);
            }
            else if (element.widget?.view) {
                element.widget.view.ui.remove(element.childElem);
            }
            if (element._watchHandles) {
                element._watchHandles.forEach((handle) => {
                    handle.remove();
                });
            }
            element._watchHandles = [];
            element.widget?.destroy();
        }
    }
    else {
        setTimeout(() => {
            if (!element.el.isConnected) {
                if (element.view) {
                    element.view.ui.remove(element.el);
                }
                else if (element.widget?.view) {
                    element.widget.view.ui.remove(element.el);
                }
                if (element._watchHandles) {
                    element._watchHandles.forEach((handle) => {
                        handle.remove();
                    });
                }
                element._watchHandles = [];
                element.widget?.destroy();
            }
        }, 1000);
    }
}




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,