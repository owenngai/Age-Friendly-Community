"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_map-components_dist_esm_index-0bc55ca5_js"],{

/***/ "./node_modules/@arcgis/map-components/dist/esm/index-0bc55ca5.js":
/*!************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/index-0bc55ca5.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $: () => (/* binding */ newWidgetsTimeSlider),
/* harmony export */   A: () => (/* binding */ newWidgetsFeatureTable),
/* harmony export */   B: () => (/* binding */ newWidgetsFeatureTemplates),
/* harmony export */   C: () => (/* binding */ newWidgetsFeatures),
/* harmony export */   D: () => (/* binding */ newWidgetsFloorFilter),
/* harmony export */   E: () => (/* binding */ newWidgetsFullscreen),
/* harmony export */   F: () => (/* binding */ newWidgetsHistogram),
/* harmony export */   G: () => (/* binding */ newWidgetsHistogramRangeSlider),
/* harmony export */   H: () => (/* binding */ newWidgetsHomeHomeViewModel),
/* harmony export */   I: () => (/* binding */ newWidgetsLayerList),
/* harmony export */   J: () => (/* binding */ newWidgetsLegend),
/* harmony export */   K: () => (/* binding */ newWidgetsLineOfSight),
/* harmony export */   L: () => (/* binding */ newWidgetsLocate),
/* harmony export */   M: () => (/* binding */ newWidgetsMeasurement),
/* harmony export */   N: () => (/* binding */ newWidgetsNavigationToggle),
/* harmony export */   O: () => (/* binding */ newWidgetsPrint),
/* harmony export */   P: () => (/* binding */ newWidgetsScaleBar),
/* harmony export */   Q: () => (/* binding */ newWidgetsScaleRangeSlider),
/* harmony export */   R: () => (/* binding */ newWebScene),
/* harmony export */   S: () => (/* binding */ newViewsSceneView),
/* harmony export */   T: () => (/* binding */ newWidgetsSearch),
/* harmony export */   U: () => (/* binding */ newWidgetsShadowCast),
/* harmony export */   V: () => (/* binding */ newWidgetsSketch),
/* harmony export */   W: () => (/* binding */ newLayersGraphicsLayer),
/* harmony export */   X: () => (/* binding */ newWidgetsSlice),
/* harmony export */   Y: () => (/* binding */ newWidgetsSlider),
/* harmony export */   Z: () => (/* binding */ newWidgetsSwipe),
/* harmony export */   _: () => (/* binding */ newWidgetsTableList),
/* harmony export */   a: () => (/* binding */ newWebMap),
/* harmony export */   a0: () => (/* binding */ newWidgetsTrack),
/* harmony export */   a1: () => (/* binding */ newWidgetsUtilityNetworkAssociations),
/* harmony export */   a2: () => (/* binding */ newWidgetsUtilityNetworkTrace),
/* harmony export */   a3: () => (/* binding */ newWidgetsUtilityNetworkValidateTopology),
/* harmony export */   a4: () => (/* binding */ newWidgetsValuePicker),
/* harmony export */   a5: () => (/* binding */ newWidgetsVersionManagementVersionManagementViewModel),
/* harmony export */   a6: () => (/* binding */ newWidgetsWeather),
/* harmony export */   a7: () => (/* binding */ newWidgetsZoom),
/* harmony export */   a8: () => (/* binding */ newWidgetsExpand),
/* harmony export */   b: () => (/* binding */ newViewsMapView),
/* harmony export */   c: () => (/* binding */ newWidgetsAreaMeasurement2D),
/* harmony export */   d: () => (/* binding */ newWidgetsAreaMeasurement3D),
/* harmony export */   e: () => (/* binding */ newWidgetsAttachments),
/* harmony export */   f: () => (/* binding */ newWidgetsBasemapLayerList),
/* harmony export */   g: () => (/* binding */ newWidgetsBasemapToggle),
/* harmony export */   h: () => (/* binding */ newWidgetsBookmarks),
/* harmony export */   i: () => (/* binding */ importCoreReactiveUtils),
/* harmony export */   j: () => (/* binding */ newWidgetsBuildingExplorer),
/* harmony export */   k: () => (/* binding */ newWidgetsCompass),
/* harmony export */   l: () => (/* binding */ importCoreAccessor),
/* harmony export */   m: () => (/* binding */ importCoreAccessorSupportDecorators),
/* harmony export */   n: () => (/* binding */ newWidgetsBasemapGallery),
/* harmony export */   o: () => (/* binding */ newWidgetsCoordinateConversion),
/* harmony export */   p: () => (/* binding */ newWidgetsDaylight),
/* harmony export */   q: () => (/* binding */ newWidgetsDirectionalPad),
/* harmony export */   r: () => (/* binding */ newLayersRouteLayer),
/* harmony export */   s: () => (/* binding */ newWidgetsDirections),
/* harmony export */   t: () => (/* binding */ newWidgetsDirectLineMeasurement3D),
/* harmony export */   u: () => (/* binding */ newWidgetsDistanceMeasurement2D),
/* harmony export */   v: () => (/* binding */ newWidgetsEditor),
/* harmony export */   w: () => (/* binding */ newWidgetsElevationProfile),
/* harmony export */   x: () => (/* binding */ newWidgetsFeature),
/* harmony export */   y: () => (/* binding */ newWidgetsFeatureForm),
/* harmony export */   z: () => (/* binding */ newLayersFeatureLayer)
/* harmony export */ });
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */
// src/index.ts
var isAMD = typeof window !== "undefined" && "$arcgis" in window && typeof window.$arcgis === "object" && "import" in window.$arcgis;
function isDefaultModule(module) {
  return module.default !== void 0;
}
async function importCoreAccessor() {
  if (isAMD) {
    return await window.$arcgis.import("esri/core/Accessor");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/core/Accessor.js */ "@arcgis/core/core/Accessor.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function importLayersFeatureLayer() {
  if (isAMD) {
    return await window.$arcgis.import("esri/layers/FeatureLayer");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/layers/FeatureLayer.js */ "@arcgis/core/layers/FeatureLayer.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newLayersFeatureLayer(properties) {
  const ModConstructor = await importLayersFeatureLayer();
  return new ModConstructor(properties);
}
async function importLayersGraphicsLayer() {
  if (isAMD) {
    return await window.$arcgis.import("esri/layers/GraphicsLayer");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/layers/GraphicsLayer.js */ "@arcgis/core/layers/GraphicsLayer.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newLayersGraphicsLayer(properties) {
  const ModConstructor = await importLayersGraphicsLayer();
  return new ModConstructor(properties);
}
async function importLayersRouteLayer() {
  if (isAMD) {
    return await window.$arcgis.import("esri/layers/RouteLayer");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/layers/RouteLayer.js */ "@arcgis/core/layers/RouteLayer.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newLayersRouteLayer(properties) {
  const ModConstructor = await importLayersRouteLayer();
  return new ModConstructor(properties);
}
async function importViewsMapView() {
  if (isAMD) {
    return await window.$arcgis.import("esri/views/MapView");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/views/MapView.js */ "@arcgis/core/views/MapView.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newViewsMapView(properties) {
  const ModConstructor = await importViewsMapView();
  return new ModConstructor(properties);
}
async function importViewsSceneView() {
  if (isAMD) {
    return await window.$arcgis.import("esri/views/SceneView");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/views/SceneView.js */ "@arcgis/core/views/SceneView.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newViewsSceneView(properties) {
  const ModConstructor = await importViewsSceneView();
  return new ModConstructor(properties);
}
async function importWebMap() {
  if (isAMD) {
    return await window.$arcgis.import("esri/WebMap");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/WebMap.js */ "@arcgis/core/WebMap.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWebMap(properties) {
  const ModConstructor = await importWebMap();
  return new ModConstructor(properties);
}
async function importWebScene() {
  if (isAMD) {
    return await window.$arcgis.import("esri/WebScene");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/WebScene.js */ "@arcgis/core/WebScene.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWebScene(properties) {
  const ModConstructor = await importWebScene();
  return new ModConstructor(properties);
}
async function importWidgetsAreaMeasurement2D() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/AreaMeasurement2D");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/AreaMeasurement2D.js */ "@arcgis/core/widgets/AreaMeasurement2D.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsAreaMeasurement2D(properties) {
  const ModConstructor = await importWidgetsAreaMeasurement2D();
  return new ModConstructor(properties);
}
async function importWidgetsAreaMeasurement3D() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/AreaMeasurement3D");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/AreaMeasurement3D.js */ "@arcgis/core/widgets/AreaMeasurement3D.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsAreaMeasurement3D(properties) {
  const ModConstructor = await importWidgetsAreaMeasurement3D();
  return new ModConstructor(properties);
}
async function importWidgetsAttachments() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Attachments");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Attachments.js */ "@arcgis/core/widgets/Attachments.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsAttachments(properties) {
  const ModConstructor = await importWidgetsAttachments();
  return new ModConstructor(properties);
}
async function importWidgetsBasemapGallery() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/BasemapGallery");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/BasemapGallery.js */ "@arcgis/core/widgets/BasemapGallery.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsBasemapGallery(properties) {
  const ModConstructor = await importWidgetsBasemapGallery();
  return new ModConstructor(properties);
}
async function importWidgetsBasemapLayerList() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/BasemapLayerList");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/BasemapLayerList.js */ "@arcgis/core/widgets/BasemapLayerList.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsBasemapLayerList(properties) {
  const ModConstructor = await importWidgetsBasemapLayerList();
  return new ModConstructor(properties);
}
async function importWidgetsBasemapToggle() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/BasemapToggle");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/BasemapToggle.js */ "@arcgis/core/widgets/BasemapToggle.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsBasemapToggle(properties) {
  const ModConstructor = await importWidgetsBasemapToggle();
  return new ModConstructor(properties);
}
async function importWidgetsBookmarks() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Bookmarks");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Bookmarks.js */ "@arcgis/core/widgets/Bookmarks.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsBookmarks(properties) {
  const ModConstructor = await importWidgetsBookmarks();
  return new ModConstructor(properties);
}
async function importWidgetsBuildingExplorer() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/BuildingExplorer");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/BuildingExplorer.js */ "@arcgis/core/widgets/BuildingExplorer.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsBuildingExplorer(properties) {
  const ModConstructor = await importWidgetsBuildingExplorer();
  return new ModConstructor(properties);
}
async function importWidgetsCompass() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Compass");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Compass.js */ "@arcgis/core/widgets/Compass.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsCompass(properties) {
  const ModConstructor = await importWidgetsCompass();
  return new ModConstructor(properties);
}
async function importWidgetsCoordinateConversion() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/CoordinateConversion");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/CoordinateConversion.js */ "@arcgis/core/widgets/CoordinateConversion.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsCoordinateConversion(properties) {
  const ModConstructor = await importWidgetsCoordinateConversion();
  return new ModConstructor(properties);
}
async function importWidgetsDaylight() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Daylight");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Daylight.js */ "@arcgis/core/widgets/Daylight.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsDaylight(properties) {
  const ModConstructor = await importWidgetsDaylight();
  return new ModConstructor(properties);
}
async function importWidgetsDirectionalPad() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/DirectionalPad");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/DirectionalPad.js */ "@arcgis/core/widgets/DirectionalPad.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsDirectionalPad(properties) {
  const ModConstructor = await importWidgetsDirectionalPad();
  return new ModConstructor(properties);
}
async function importWidgetsDirections() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Directions");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Directions.js */ "@arcgis/core/widgets/Directions.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsDirections(properties) {
  const ModConstructor = await importWidgetsDirections();
  return new ModConstructor(properties);
}
async function importWidgetsDirectLineMeasurement3D() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/DirectLineMeasurement3D");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/DirectLineMeasurement3D.js */ "@arcgis/core/widgets/DirectLineMeasurement3D.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsDirectLineMeasurement3D(properties) {
  const ModConstructor = await importWidgetsDirectLineMeasurement3D();
  return new ModConstructor(properties);
}
async function importWidgetsDistanceMeasurement2D() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/DistanceMeasurement2D");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/DistanceMeasurement2D.js */ "@arcgis/core/widgets/DistanceMeasurement2D.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsDistanceMeasurement2D(properties) {
  const ModConstructor = await importWidgetsDistanceMeasurement2D();
  return new ModConstructor(properties);
}
async function importWidgetsEditor() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Editor");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Editor.js */ "@arcgis/core/widgets/Editor.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsEditor(properties) {
  const ModConstructor = await importWidgetsEditor();
  return new ModConstructor(properties);
}
async function importWidgetsElevationProfile() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/ElevationProfile");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/ElevationProfile.js */ "@arcgis/core/widgets/ElevationProfile.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsElevationProfile(properties) {
  const ModConstructor = await importWidgetsElevationProfile();
  return new ModConstructor(properties);
}
async function importWidgetsExpand() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Expand");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Expand.js */ "@arcgis/core/widgets/Expand.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsExpand(properties) {
  const ModConstructor = await importWidgetsExpand();
  return new ModConstructor(properties);
}
async function importWidgetsFeature() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Feature");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Feature.js */ "@arcgis/core/widgets/Feature.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsFeature(properties) {
  const ModConstructor = await importWidgetsFeature();
  return new ModConstructor(properties);
}
async function importWidgetsFeatureForm() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/FeatureForm");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/FeatureForm.js */ "@arcgis/core/widgets/FeatureForm.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsFeatureForm(properties) {
  const ModConstructor = await importWidgetsFeatureForm();
  return new ModConstructor(properties);
}
async function importWidgetsFeatures() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Features");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Features.js */ "@arcgis/core/widgets/Features.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsFeatures(properties) {
  const ModConstructor = await importWidgetsFeatures();
  return new ModConstructor(properties);
}
async function importWidgetsFeatureTable() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/FeatureTable");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/FeatureTable.js */ "@arcgis/core/widgets/FeatureTable.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsFeatureTable(properties) {
  const ModConstructor = await importWidgetsFeatureTable();
  return new ModConstructor(properties);
}
async function importWidgetsFeatureTemplates() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/FeatureTemplates");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/FeatureTemplates.js */ "@arcgis/core/widgets/FeatureTemplates.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsFeatureTemplates(properties) {
  const ModConstructor = await importWidgetsFeatureTemplates();
  return new ModConstructor(properties);
}
async function importWidgetsFloorFilter() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/FloorFilter");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/FloorFilter.js */ "@arcgis/core/widgets/FloorFilter.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsFloorFilter(properties) {
  const ModConstructor = await importWidgetsFloorFilter();
  return new ModConstructor(properties);
}
async function importWidgetsFullscreen() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Fullscreen");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Fullscreen.js */ "@arcgis/core/widgets/Fullscreen.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsFullscreen(properties) {
  const ModConstructor = await importWidgetsFullscreen();
  return new ModConstructor(properties);
}
async function importWidgetsHistogram() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Histogram");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Histogram.js */ "@arcgis/core/widgets/Histogram.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsHistogram(properties) {
  const ModConstructor = await importWidgetsHistogram();
  return new ModConstructor(properties);
}
async function importWidgetsHistogramRangeSlider() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/HistogramRangeSlider");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/HistogramRangeSlider.js */ "@arcgis/core/widgets/HistogramRangeSlider.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsHistogramRangeSlider(properties) {
  const ModConstructor = await importWidgetsHistogramRangeSlider();
  return new ModConstructor(properties);
}
async function importWidgetsHomeHomeViewModel() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Home/HomeViewModel");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Home/HomeViewModel.js */ "@arcgis/core/widgets/Home/HomeViewModel.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsHomeHomeViewModel(properties) {
  const ModConstructor = await importWidgetsHomeHomeViewModel();
  return new ModConstructor(properties);
}
async function importWidgetsLayerList() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/LayerList");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/LayerList.js */ "@arcgis/core/widgets/LayerList.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsLayerList(properties) {
  const ModConstructor = await importWidgetsLayerList();
  return new ModConstructor(properties);
}
async function importWidgetsLegend() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Legend");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Legend.js */ "@arcgis/core/widgets/Legend.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsLegend(properties) {
  const ModConstructor = await importWidgetsLegend();
  return new ModConstructor(properties);
}
async function importWidgetsLineOfSight() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/LineOfSight");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/LineOfSight.js */ "@arcgis/core/widgets/LineOfSight.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsLineOfSight(properties) {
  const ModConstructor = await importWidgetsLineOfSight();
  return new ModConstructor(properties);
}
async function importWidgetsLocate() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Locate");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Locate.js */ "@arcgis/core/widgets/Locate.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsLocate(properties) {
  const ModConstructor = await importWidgetsLocate();
  return new ModConstructor(properties);
}
async function importWidgetsMeasurement() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Measurement");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Measurement.js */ "@arcgis/core/widgets/Measurement.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsMeasurement(properties) {
  const ModConstructor = await importWidgetsMeasurement();
  return new ModConstructor(properties);
}
async function importWidgetsNavigationToggle() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/NavigationToggle");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/NavigationToggle.js */ "@arcgis/core/widgets/NavigationToggle.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsNavigationToggle(properties) {
  const ModConstructor = await importWidgetsNavigationToggle();
  return new ModConstructor(properties);
}
async function importWidgetsPrint() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Print");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Print.js */ "@arcgis/core/widgets/Print.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsPrint(properties) {
  const ModConstructor = await importWidgetsPrint();
  return new ModConstructor(properties);
}
async function importWidgetsScaleBar() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/ScaleBar");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/ScaleBar.js */ "@arcgis/core/widgets/ScaleBar.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsScaleBar(properties) {
  const ModConstructor = await importWidgetsScaleBar();
  return new ModConstructor(properties);
}
async function importWidgetsScaleRangeSlider() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/ScaleRangeSlider");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/ScaleRangeSlider.js */ "@arcgis/core/widgets/ScaleRangeSlider.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsScaleRangeSlider(properties) {
  const ModConstructor = await importWidgetsScaleRangeSlider();
  return new ModConstructor(properties);
}
async function importWidgetsSearch() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Search");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Search.js */ "@arcgis/core/widgets/Search.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsSearch(properties) {
  const ModConstructor = await importWidgetsSearch();
  return new ModConstructor(properties);
}
async function importWidgetsShadowCast() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/ShadowCast");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/ShadowCast.js */ "@arcgis/core/widgets/ShadowCast.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsShadowCast(properties) {
  const ModConstructor = await importWidgetsShadowCast();
  return new ModConstructor(properties);
}
async function importWidgetsSketch() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Sketch");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Sketch.js */ "@arcgis/core/widgets/Sketch.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsSketch(properties) {
  const ModConstructor = await importWidgetsSketch();
  return new ModConstructor(properties);
}
async function importWidgetsSlice() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Slice");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Slice.js */ "@arcgis/core/widgets/Slice.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsSlice(properties) {
  const ModConstructor = await importWidgetsSlice();
  return new ModConstructor(properties);
}
async function importWidgetsSlider() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Slider");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Slider.js */ "@arcgis/core/widgets/Slider.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsSlider(properties) {
  const ModConstructor = await importWidgetsSlider();
  return new ModConstructor(properties);
}
async function importWidgetsSwipe() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Swipe");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Swipe.js */ "@arcgis/core/widgets/Swipe.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsSwipe(properties) {
  const ModConstructor = await importWidgetsSwipe();
  return new ModConstructor(properties);
}
async function importWidgetsTableList() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/TableList");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/TableList.js */ "@arcgis/core/widgets/TableList.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsTableList(properties) {
  const ModConstructor = await importWidgetsTableList();
  return new ModConstructor(properties);
}
async function importWidgetsTimeSlider() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/TimeSlider");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/TimeSlider.js */ "@arcgis/core/widgets/TimeSlider.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsTimeSlider(properties) {
  const ModConstructor = await importWidgetsTimeSlider();
  return new ModConstructor(properties);
}
async function importWidgetsTrack() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Track");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Track.js */ "@arcgis/core/widgets/Track.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsTrack(properties) {
  const ModConstructor = await importWidgetsTrack();
  return new ModConstructor(properties);
}
async function importWidgetsUtilityNetworkAssociations() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/UtilityNetworkAssociations");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/UtilityNetworkAssociations.js */ "@arcgis/core/widgets/UtilityNetworkAssociations.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsUtilityNetworkAssociations(properties) {
  const ModConstructor = await importWidgetsUtilityNetworkAssociations();
  return new ModConstructor(properties);
}
async function importWidgetsUtilityNetworkTrace() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/UtilityNetworkTrace");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/UtilityNetworkTrace.js */ "@arcgis/core/widgets/UtilityNetworkTrace.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsUtilityNetworkTrace(properties) {
  const ModConstructor = await importWidgetsUtilityNetworkTrace();
  return new ModConstructor(properties);
}
async function importWidgetsUtilityNetworkValidateTopology() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/UtilityNetworkValidateTopology");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/UtilityNetworkValidateTopology.js */ "@arcgis/core/widgets/UtilityNetworkValidateTopology.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsUtilityNetworkValidateTopology(properties) {
  const ModConstructor = await importWidgetsUtilityNetworkValidateTopology();
  return new ModConstructor(properties);
}
async function importWidgetsValuePicker() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/ValuePicker");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/ValuePicker.js */ "@arcgis/core/widgets/ValuePicker.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsValuePicker(properties) {
  const ModConstructor = await importWidgetsValuePicker();
  return new ModConstructor(properties);
}
async function importWidgetsVersionManagementVersionManagementViewModel() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/VersionManagement/VersionManagementViewModel");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/VersionManagement/VersionManagementViewModel.js */ "@arcgis/core/widgets/VersionManagement/VersionManagementViewModel.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsVersionManagementVersionManagementViewModel(properties) {
  const ModConstructor = await importWidgetsVersionManagementVersionManagementViewModel();
  return new ModConstructor(properties);
}
async function importWidgetsWeather() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Weather");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Weather.js */ "@arcgis/core/widgets/Weather.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsWeather(properties) {
  const ModConstructor = await importWidgetsWeather();
  return new ModConstructor(properties);
}
async function importWidgetsZoom() {
  if (isAMD) {
    return await window.$arcgis.import("esri/widgets/Zoom");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/widgets/Zoom.js */ "@arcgis/core/widgets/Zoom.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function newWidgetsZoom(properties) {
  const ModConstructor = await importWidgetsZoom();
  return new ModConstructor(properties);
}
async function importCoreAccessorSupportDecorators() {
  if (isAMD) {
    return await window.$arcgis.import("esri/core/accessorSupport/decorators");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/core/accessorSupport/decorators.js */ "@arcgis/core/core/accessorSupport/decorators.js"));
  return isDefaultModule(module) ? module.default : module;
}
async function importCoreReactiveUtils() {
  if (isAMD) {
    return await window.$arcgis.import("esri/core/reactiveUtils");
  }
  const module = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @arcgis/core/core/reactiveUtils.js */ "@arcgis/core/core/reactiveUtils.js"));
  return isDefaultModule(module) ? module.default : module;
}




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,