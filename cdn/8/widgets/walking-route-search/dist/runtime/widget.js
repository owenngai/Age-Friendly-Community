System.register(["jimu-core/react","jimu-arcgis","esri/Graphic","esri/geometry/geometryEngine.js"],(function(e,t){var o={},r={},n={},l={};return{setters:[function(e){o.default=e.default,o.useEffect=e.useEffect,o.useState=e.useState},function(e){r.JimuMapViewComponent=e.JimuMapViewComponent},function(e){n.default=e.default},function(e){l.geodesicBuffer=e.geodesicBuffer}],execute:function(){e((()=>{var e={2089:e=>{"use strict";e.exports=n},5431:e=>{"use strict";e.exports=l},2686:e=>{"use strict";e.exports=r},8972:e=>{"use strict";e.exports=o}},t={};function i(o){var r=t[o];if(void 0!==r)return r.exports;var n=t[o]={exports:{}};return e[o](n,n.exports,i),n.exports}i.d=(e,t)=>{for(var o in t)i.o(t,o)&&!i.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.p="";var s={};return i.p=window.jimuConfig.baseUrl,(()=>{"use strict";i.r(s),i.d(s,{__set_webpack_public_path__:()=>u,default:()=>l});var e=i(8972),t=i(2686),o=i(2089),r=i(5431),n=function(e,t,o,r){return new(o||(o=Promise))((function(n,l){function i(e){try{u(r.next(e))}catch(e){l(e)}}function s(e){try{u(r.throw(e))}catch(e){l(e)}}function u(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(i,s)}u((r=r.apply(e,t||[])).next())}))};function l(l){var i;const[s,u]=(0,e.useState)(null),[a,c]=(0,e.useState)(null),[d,f]=(0,e.useState)(null),[p,g]=(0,e.useState)(null),m=e.default.useRef(0),y="AAPTxy8BH1VEsoebNVZXo8HurEE5qod6fdFwn9Z7joZ1eU80Mpc1ZKKX4XFEXSZaqSdDcuX8887vxtDuaaH8KlFJ9A_NozBe01ZqM_KHeQyl6Ol7LaPaHAx5_g-NxaYoLvfo8FDiX3D2UQ_VGPMBYYlxd-NJu71ajh9hhTV9iedP2hyvYZb5oq1PdFEYJwfzN_zWXj_-XawgqAf-eWPEt_8dnR1WNKoQMfp8M06F1MGLX4s.AT1_Fa9PuOBU";(0,e.useEffect)((()=>{s&&!p&&(console.log("set up graphics layer..."),g(s.view.graphics))}),[s,p]),(0,e.useEffect)((()=>{s&&(console.log("Map view is available"),s.view.on("click",v))}),[p]),(0,e.useEffect)((()=>{a&&d&&(console.log("Routing from",a,"to",d),h(a,d))}),[a,d]);const v=e=>{const{mapPoint:t}=e;if(console.log(e),0===m.current){c(null),f(null),console.log("Start point selected:",t);const e=new o.default({geometry:{type:"point",longitude:t.longitude,latitude:t.latitude},symbol:{type:"simple-marker",color:[0,255,255,1],size:"10px"}});null==p||p.add(e),c(t),m.current=1}else if(1===m.current){console.log("End point selected:",t);const e=new o.default({geometry:{type:"point",longitude:t.longitude,latitude:t.latitude},symbol:{type:"simple-marker",color:[0,255,255,1],size:"10px"}});null==p||p.add(e),f(t),m.current=0}},h=(e,t)=>n(this,void 0,void 0,(function*(){(function(e,t){return n(this,void 0,void 0,(function*(){console.log("Fetching route from Esri API...");const o=yield function(){return n(this,void 0,void 0,(function*(){console.log("call Retrieve Travel Modes...");const e="https://route.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World/retrieveTravelModes",t=new URLSearchParams({f:"json",token:y});try{const o=yield fetch(`${e}?${t}`),r=yield o.json();if(r)return r;console.error("No route found:",r.messages)}catch(e){console.error("Error travel modes:",e)}}))}(),{supportedTravelModes:r}=o,l=r.find((({name:e})=>"Walking Distance"===e));console.log(o.supportedTravelModes),console.log(l),console.log(e,t);const i="https://route-api.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World/solve",s=new URLSearchParams({f:"json",token:y,stops:`${e.longitude},${e.latitude};${t.longitude},${t.latitude}`,returnDirections:"true",travelMode:l});try{const e=yield fetch(`${i}?${s}`),t=yield e.json();if(t.routes)return t;console.error("No route found:",t.messages)}catch(e){console.error("Error fetching route:",e)}}))})(e,t).then((e=>{e&&(console.log("Route geometry:",e),function(e,t){if(e&&e.routes.features[0].geometry.paths.length>0){console.log("looping through route features",e.routes.features[0].geometry.paths),console.log("route",JSON.stringify(e.routes.features[0].geometry.paths[0]));const t=new o.default({geometry:{type:"polyline",paths:e.routes.features[0].geometry.paths[0]},symbol:{type:"simple-line",color:[255,255,0,1],width:3}});p.add(t),function(e){n(this,void 0,void 0,(function*(){console.log("getting route buffer...");const t=r.geodesicBuffer(e.geometry,50,"meters"),n=new o.default({geometry:t,symbol:{type:"simple-fill",color:[0,255,255,.25],outline:{color:[0,255,255,.5],width:1}}});p.add(n);const l=s.view,i=l.map.findLayerById("190f3ea6612-layer-91");let u;i.visible=!0;const a=i.createQuery();a.geometry=t,a.spatialRelationship="intersects",a.returnGeometry=!1,l.whenLayerView(i).then((function(e){i.queryFeatures(a).then((t=>{u&&u.remove(),u=e.highlight(t.features)}))}))}))}(t)}else console.error("No route features available to display.")}(e,s.view))}))}));return e.default.createElement("div",{className:"walking-route-widget"},e.default.createElement("h5",null,"Walking Route Finder"),e.default.createElement("p",null,"Click on the map to select a start and end point.",e.default.createElement("br",null),"start point: ",null==a?void 0:a.longitude.toFixed(5),", ",null==a?void 0:a.latitude.toFixed(5)," end point: ",null==d?void 0:d.longitude.toFixed(5),", ",null==d?void 0:d.latitude.toFixed(5)),e.default.createElement("button",{onClick:()=>{c(null),f(null),p.removeAll(),m.current=0}},"Reset Points"),e.default.createElement(t.JimuMapViewComponent,{useMapWidgetId:null===(i=l.useMapWidgetIds)||void 0===i?void 0:i[0],onActiveViewChange:e=>{u(e)}}))}function u(e){i.p=e}})(),s})())}}}));