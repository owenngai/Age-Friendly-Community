"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_map-components_dist_esm_arcgis-search_entry_js"],{

/***/ "./node_modules/@arcgis/map-components/dist/esm/arcgis-search.entry.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/arcgis-search.entry.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_search: () => (/* binding */ ArcgisSearch)
/* harmony export */ });
/* harmony import */ var _index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-6e172aac.js */ "./node_modules/@arcgis/map-components/dist/esm/index-6e172aac.js");
/* harmony import */ var _index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-0bc55ca5.js */ "./node_modules/@arcgis/map-components/dist/esm/index-0bc55ca5.js");
/* harmony import */ var _component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./component-utils-23194f7c.js */ "./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js");
/* harmony import */ var _disconnected_6cf1c100_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./disconnected-6cf1c100.js */ "./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js");
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */





const searchCss = "";

const ArcgisSearch = class {
    constructor(hostRef) {
        (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisSearchReady = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisSearchReady", 7);
        this.searchBlur = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "searchBlur", 7);
        this.searchClear = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "searchClear", 7);
        this.searchComplete = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "searchComplete", 7);
        this.searchFocus = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "searchFocus", 7);
        this.searchStart = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "searchStart", 7);
        this.searchSelectResult = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "searchSelectResult", 7);
        this.searchSuggestComplete = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "searchSuggestComplete", 7);
        this.searchSuggestStart = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "searchSuggestStart", 7);
        this._watchHandles = [];
        this.referenceElement = undefined;
        this.activeMenu = "none";
        this.activeSource = undefined;
        this.activeSourceIndex = 0;
        this.allPlaceholder = "Find address or place";
        this.allSources = undefined;
        this.autoSelect = true;
        this.defaultSources = undefined;
        this.disabled = false;
        this.icon = undefined;
        this.includeDefaultSources = true;
        this.locationEnabled = true;
        this.maxResults = 6;
        this.maxSuggestions = 6;
        this.minSuggestCharacters = 3;
        this.popupEnabled = true;
        this.popupTemplate = undefined;
        this.portal = undefined;
        this.resultGraphic = undefined;
        this.resultGraphicEnabled = true;
        this.results = undefined;
        this.searchAllEnabled = true;
        this.searchTerm = undefined;
        this.selectedResult = undefined;
        this.sources = undefined;
        this.suggestions = undefined;
        this.suggestionsEnabled = true;
        this.position = "top-right";
        this.view = undefined;
        this.widget = undefined;
    }
    referenceElementWatcher(value) {
        void (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.r)(this, value);
    }
    activeMenuWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.activeMenu = value;
        }
    }
    activeSourceIndexWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.activeSourceIndex = value;
        }
    }
    allPlaceholderWatcher(value) {
        if (this.widget) {
            this.widget.allPlaceholder = value;
        }
    }
    autoSelectWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.autoSelect = value;
        }
    }
    disabledWatcher(value, old) {
        if (this.widget && value !== old) {
            this.widget.disabled = value;
        }
    }
    iconWatcher(value) {
        if (this.widget) {
            this.widget.icon = value;
        }
    }
    includeDefaultSourcesWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.includeDefaultSources = value;
        }
    }
    locationEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.locationEnabled = value;
        }
    }
    maxResultsWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.maxResults = value;
        }
    }
    maxSuggestionsWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.maxSuggestions = value;
        }
    }
    minSuggestCharactersWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.minSuggestCharacters = value;
        }
    }
    popupEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.popupEnabled = value;
        }
    }
    popupTemplateWatcher(value) {
        if (this.widget) {
            this.widget.popupTemplate = value;
        }
    }
    portalWatcher(value) {
        if (this.widget) {
            this.widget.portal = value;
        }
    }
    resultGraphicEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.resultGraphicEnabled = value;
        }
    }
    searchAllEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.searchAllEnabled = value;
        }
    }
    searchTermWatcher(value) {
        if (this.widget) {
            this.widget.searchTerm = value;
        }
    }
    sourcesWatcher(value) {
        if (this.widget) {
            this.widget.sources = value;
        }
    }
    suggestionsEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.suggestionsEnabled = value;
        }
    }
    positionWatcher(value) {
        if (value !== undefined && this.widget) {
            this.view.ui.move(this.childElem, value);
        }
    }
    viewWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.view = value;
        }
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    async blurSearch() {
        this.widget?.blur();
    }
    async clearSearch() {
        this.widget?.clear();
    }
    async focusSearch() {
        this.widget?.focus();
    }
    async search(term) {
        return await this.widget?.search(term);
    }
    async suggest(term) {
        return await this.widget?.suggest(term);
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    async componentDidLoad() {
        const params = this._createParams();
        const widget = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.T)(params);
        this.widget = widget;
        await this._addWatchers();
        this._proxyEvents();
        this._addContainer();
        this.arcgisSearchReady.emit();
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
    }
    disconnectedCallback() {
        (0,_disconnected_6cf1c100_js__WEBPACK_IMPORTED_MODULE_3__.o)(this);
    }
    render() {
        return (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { ref: (el) => (this.childElem = el) });
    }
    //--------------------------------------------------------------------------
    //
    //  Private Interal Methods
    //
    //--------------------------------------------------------------------------
    _addContainer() {
        this.widget.container = this.childElem;
    }
    async _addWatchers() {
        const { watch } = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.i)();
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.activeSource, (value) => (this.activeSource = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.activeSourceIndex, (value) => (this.activeSourceIndex = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.allSources, (value) => (this.allSources = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.defaultSources, (value) => (this.defaultSources = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.disabled, (value) => (this.disabled = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.resultGraphic, (value) => (this.resultGraphic = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.results, (value) => (this.results = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.selectedResult, (value) => (this.selectedResult = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.suggestions, (value) => (this.suggestions = value), {
            initial: true,
        }));
    }
    _createParams() {
        const params = {};
        if (this.allPlaceholder) {
            params.allPlaceholder = this.allPlaceholder;
        }
        if (this.autoSelect !== undefined) {
            params.autoSelect = this.autoSelect;
        }
        if (this.includeDefaultSources !== undefined) {
            params.includeDefaultSources = this.includeDefaultSources;
        }
        if (this.locationEnabled !== undefined) {
            params.locationEnabled = this.locationEnabled;
        }
        if (this.maxResults !== undefined) {
            params.maxResults = this.maxResults;
        }
        if (this.maxSuggestions !== undefined) {
            params.maxSuggestions = this.maxSuggestions;
        }
        if (this.minSuggestCharacters !== undefined) {
            params.minSuggestCharacters = this.minSuggestCharacters;
        }
        if (this.popupEnabled !== undefined) {
            params.popupEnabled = this.popupEnabled;
        }
        if (this.popupTemplate) {
            params.popupTemplate = this.popupTemplate;
        }
        if (this.portal) {
            params.portal = this.portal;
        }
        if (this.resultGraphicEnabled !== undefined) {
            params.resultGraphicEnabled = this.resultGraphicEnabled;
        }
        if (this.searchAllEnabled !== undefined) {
            params.searchAllEnabled = this.searchAllEnabled;
        }
        if (this.searchTerm) {
            params.searchTerm = this.searchTerm;
        }
        if (this.sources) {
            params.sources = this.sources;
        }
        if (this.suggestionsEnabled !== undefined) {
            params.suggestionsEnabled = this.suggestionsEnabled;
        }
        if (this.view) {
            params.view = this.view;
        }
        return params;
    }
    _proxyEvents() {
        this.widget.on("search-blur", (e) => this.searchBlur.emit(e));
        this.widget.on("search-clear", (e) => this.searchClear.emit(e));
        this.widget.on("search-complete", (e) => this.searchComplete.emit(e));
        this.widget.on("search-focus", (e) => this.searchFocus.emit(e));
        this.widget.on("search-start", (e) => this.searchStart.emit(e));
        this.widget.on("select-result", (e) => this.searchSelectResult.emit(e));
        this.widget.on("suggest-complete", (e) => this.searchSuggestComplete.emit(e));
        this.widget.on("suggest-start", (e) => this.searchSuggestStart.emit(e));
    }
    get el() { return (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get watchers() { return {
        "referenceElement": ["referenceElementWatcher"],
        "activeMenu": ["activeMenuWatcher"],
        "activeSourceIndex": ["activeSourceIndexWatcher"],
        "allPlaceholder": ["allPlaceholderWatcher"],
        "autoSelect": ["autoSelectWatcher"],
        "disabled": ["disabledWatcher"],
        "icon": ["iconWatcher"],
        "includeDefaultSources": ["includeDefaultSourcesWatcher"],
        "locationEnabled": ["locationEnabledWatcher"],
        "maxResults": ["maxResultsWatcher"],
        "maxSuggestions": ["maxSuggestionsWatcher"],
        "minSuggestCharacters": ["minSuggestCharactersWatcher"],
        "popupEnabled": ["popupEnabledWatcher"],
        "popupTemplate": ["popupTemplateWatcher"],
        "portal": ["portalWatcher"],
        "resultGraphicEnabled": ["resultGraphicEnabledWatcher"],
        "searchAllEnabled": ["searchAllEnabledWatcher"],
        "searchTerm": ["searchTermWatcher"],
        "sources": ["sourcesWatcher"],
        "suggestionsEnabled": ["suggestionsEnabledWatcher"],
        "position": ["positionWatcher"],
        "view": ["viewWatcher"]
    }; }
};
ArcgisSearch.style = searchCss;




/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ addHandles),
/* harmony export */   b: () => (/* binding */ isNotSameViewpoint),
/* harmony export */   c: () => (/* binding */ checkForView),
/* harmony export */   d: () => (/* binding */ checkForExpand),
/* harmony export */   e: () => (/* binding */ isNotSameCamera),
/* harmony export */   f: () => (/* binding */ isNotSameEnvironment),
/* harmony export */   g: () => (/* binding */ isValidInteger),
/* harmony export */   i: () => (/* binding */ isNullOrEmptyString),
/* harmony export */   r: () => (/* binding */ referenceElementHelper)
/* harmony export */ });
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */
function checkForExpand(element) {
    const expandRef = element.el.closest("arcgis-expand") ?? element.expandElem;
    if (expandRef?.widget) {
        element.view = expandRef.view;
        expandRef.widget.content = element.childElem ?? element.el;
        // TODO: Update to be expandIcon = widget.icon, not ready yet in 4.27next
        if (!expandRef.expandIcon) {
            expandRef.widget.expandIcon = element.widget ? element.widget.icon : element?.icon;
        }
        return true;
    }
    if (expandRef) {
        const widgetHandler = () => {
            expandRef.removeEventListener("arcgisExpandReady", widgetHandler, false);
            element.view = expandRef.view;
            expandRef.widget.content = element.childElem ?? element.el;
            if (!expandRef.expandIcon) {
                expandRef.widget.expandIcon = element.widget ? element.widget.icon : element?.icon;
            }
        };
        expandRef.addEventListener("arcgisExpandReady", widgetHandler, false);
        return true;
    }
    return false;
}

//--------------------------------------------------------------------------
//
//  Public Methods
//
//--------------------------------------------------------------------------
function addHandles(element, handle) {
    if (Array.isArray(handle)) {
        element._watchHandles = [...element._watchHandles, ...handle];
    }
    else {
        element._watchHandles.push(handle);
    }
}
function checkForView(element) {
    let isUsingReferenceElement = false;
    if (!checkForExpand(element)) {
        let viewRef = element.el.closest("arcgis-map") ?? element.el.closest("arcgis-scene");
        if (!viewRef && typeof element.referenceElement === "string") {
            viewRef = document.querySelector(element.referenceElement);
            isUsingReferenceElement = true;
        }
        if (viewRef?.view) {
            element.view = viewRef.view;
            const el = element.childElem ?? element.el;
            if (!isUsingReferenceElement) {
                element.view.ui.add(el, element.position);
            }
        }
        else if (viewRef) {
            waitForViewHandler(viewRef, element, isUsingReferenceElement);
        }
    }
    else {
        const viewRef = element.el.closest("arcgis-map") ?? element.el.closest("arcgis-scene");
        if (viewRef?.view) {
            element.view = viewRef.view;
        }
        else if (viewRef) {
            const handler = () => {
                viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
                element.view = viewRef.view;
            };
            viewRef.addEventListener("arcgisViewReadyChange", handler, false);
        }
    }
}
function isNullOrEmptyString(value) {
    return value === undefined || value === null || value === "";
}
function isValidInteger(value) {
    return value != null && value % 1 === 0;
}
function isNotSameCamera(camera, camera2) {
    return (camera2 === undefined ||
        camera.position !== camera2.position ||
        camera.heading !== camera2.heading ||
        camera.tilt !== camera2.tilt);
}
function isNotSameEnvironment(environment, environment2) {
    return (environment2 === undefined ||
        environment2.atmosphereEnabled !== environment.atmosphereEnabled ||
        environment2.lighting.date !== environment.lighting.date ||
        environment2.lighting.directShadowsEnabled !==
            environment.lighting.directShadowsEnabled ||
        environment2.lighting.cameraTrackingEnabled !==
            environment.lighting.cameraTrackingEnabled ||
        environment2.lighting.date !== environment.lighting.date ||
        environment2.lighting.displayUTCOffset !==
            environment.lighting.displayUTCOffset);
}
function isNotSameViewpoint(viewpoint, viewpoint2) {
    return (viewpoint2 === undefined ||
        viewpoint.targetGeometry !== viewpoint2.targetGeometry ||
        viewpoint.rotation !== viewpoint2.rotation ||
        viewpoint.scale !== viewpoint2.scale);
}
async function updateForView(viewStr) {
    const viewRef = document.querySelector(viewStr);
    return await new Promise((resolve) => {
        if (viewRef?.view !== undefined) {
            resolve(viewRef.view);
        }
        else if (viewRef) {
            const handler = () => {
                viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
                resolve(viewRef.view);
            };
            viewRef.addEventListener("arcgisViewReadyChange", handler, false);
        }
    });
}
async function referenceElementHelper(element, refElement) {
    if (refElement === undefined)
        return;
    else if (typeof refElement === "string") {
        element.view = await updateForView(refElement);
    }
    else if (element.widget) {
        element.view = refElement.view;
    }
}
//--------------------------------------------------------------------------
//
//  Private Methods
//
//--------------------------------------------------------------------------
function waitForViewHandler(viewRef, element, isUsingRefernceElement) {
    const handler = () => {
        viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
        element.view = viewRef.view;
        if (!isUsingRefernceElement) {
            element.view.ui.add(element.childElem ?? element.el, element.position);
        }
    };
    viewRef.addEventListener("arcgisViewReadyChange", handler, false);
}




/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   o: () => (/* binding */ onDisconnectedHelper)
/* harmony export */ });
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */
function onDisconnectedHelper(element) {
    if (element.childElem) {
        if (!element.el.isConnected) {
            if (element.view) {
                element.view.ui.remove(element.childElem);
            }
            else if (element.widget?.view) {
                element.widget.view.ui.remove(element.childElem);
            }
            if (element._watchHandles) {
                element._watchHandles.forEach((handle) => {
                    handle.remove();
                });
            }
            element._watchHandles = [];
            element.widget?.destroy();
        }
    }
    else {
        setTimeout(() => {
            if (!element.el.isConnected) {
                if (element.view) {
                    element.view.ui.remove(element.el);
                }
                else if (element.widget?.view) {
                    element.widget.view.ui.remove(element.el);
                }
                if (element._watchHandles) {
                    element._watchHandles.forEach((handle) => {
                        handle.remove();
                    });
                }
                element._watchHandles = [];
                element.widget?.destroy();
            }
        }, 1000);
    }
}




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,