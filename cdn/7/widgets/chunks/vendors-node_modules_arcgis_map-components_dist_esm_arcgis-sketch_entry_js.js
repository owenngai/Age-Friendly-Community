"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_map-components_dist_esm_arcgis-sketch_entry_js"],{

/***/ "./node_modules/@arcgis/map-components/dist/esm/arcgis-sketch.entry.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/arcgis-sketch.entry.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_sketch: () => (/* binding */ ArcgisSketch)
/* harmony export */ });
/* harmony import */ var _index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-6e172aac.js */ "./node_modules/@arcgis/map-components/dist/esm/index-6e172aac.js");
/* harmony import */ var _index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-0bc55ca5.js */ "./node_modules/@arcgis/map-components/dist/esm/index-0bc55ca5.js");
/* harmony import */ var _component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./component-utils-23194f7c.js */ "./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js");
/* harmony import */ var _disconnected_6cf1c100_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./disconnected-6cf1c100.js */ "./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js");
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */





const sketchCss = "arcgis-sketch{}";

const ArcgisSketch = class {
    constructor(hostRef) {
        (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisSketchReady = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisSketchReady", 7);
        this.sketchCreate = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sketchCreate", 7);
        this.sketchDelete = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sketchDelete", 7);
        this.sketchRedo = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sketchRedo", 7);
        this.sketchUndo = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sketchUndo", 7);
        this.sketchUpdate = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sketchUpdate", 7);
        this._watchHandles = [];
        this.referenceElement = undefined;
        this.activeTool = undefined;
        this.availableCreateTools = undefined;
        this.createGraphic = undefined;
        this.creationMode = "continuous";
        this.defaultCreateOptions = undefined;
        this.defaultUpdateOptions = undefined;
        this.icon = undefined;
        this.labelOptions = undefined;
        this.layer = undefined;
        this.layout = "horizontal";
        this.pointSymbol = undefined;
        this.polylineSymbol = undefined;
        this.polygonSymbol = undefined;
        this.snappingOptions = undefined;
        this.tooltipOptions = undefined;
        this.updateGraphics = undefined;
        this.visibleElementsCreateToolsPoint = true;
        this.visibleElementsCreateToolsPolyline = true;
        this.visibleElementsCreateToolsPolygon = true;
        this.visibleElementsCreateToolsRectangle = true;
        this.visibleElementsCreateToolsCircle = true;
        this.visibleElementsDuplicateButton = true;
        this.visibleElementsSelectionToolsRectangle = true;
        this.visibleElementsSelectionToolsLasso = true;
        this.visibleElementsSettingsMenu = true;
        this.visibleElementsLabelsToggle = true;
        this.visibleElementsTooltipsToggle = true;
        this.visibleElementsSnappingControls = true;
        this.visibleElementsSnappingControlsElementsHeader = true;
        this.visibleElementsSnappingControlsElementsEnabledToggle = true;
        this.visibleElementsSnappingControlsElementsSelfEnabledToggle = true;
        this.visibleElementsSnappingControlsElementsFeatureEnabledToggle = true;
        this.visibleElementsSnappingControlsElementsLayerList = true;
        this.visibleElementsUndoRedoMenu = true;
        this.position = "bottom-left";
        this.view = undefined;
        this.widget = undefined;
    }
    referenceElementWatcher(value) {
        void (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.r)(this, value);
    }
    availableCreateToolsWatcher(value) {
        if (this.widget) {
            this.widget.availableCreateTools = value;
        }
    }
    creationModeWatcher(value) {
        if (this.widget) {
            this.widget.creationMode = value;
        }
    }
    defaultCreateOptionsWatcher(value) {
        if (this.widget) {
            this.widget.defaultCreateOptions = value;
        }
    }
    defaultUpdateOptionsWatcher(value) {
        if (this.widget) {
            this.widget.defaultUpdateOptions = value;
        }
    }
    iconWatcher(value) {
        if (this.widget) {
            this.widget.icon = value;
        }
    }
    labelOptionsWatcher(value) {
        if (this.widget) {
            this.widget.labelOptions = value;
        }
    }
    layerWatcher(value) {
        if (this.widget) {
            this.widget.layer = value;
        }
    }
    layoutWatcher(value) {
        if (this.widget) {
            this.widget.layout = value;
        }
    }
    pointSymbolWatcher(value) {
        if (this.widget) {
            this.widget.viewModel.pointSymbol = value;
        }
    }
    polylineSymbolWatcher(value) {
        if (this.widget) {
            this.widget.viewModel.polylineSymbol = value;
        }
    }
    polygonSymbolWatcher(value) {
        if (this.widget) {
            this.widget.viewModel.polygonSymbol = value;
        }
    }
    snappingOptionsWatcher(value) {
        if (this.widget) {
            this.widget.snappingOptions = value;
        }
    }
    tooltipOptionsWatcher(value) {
        if (this.widget) {
            this.widget.tooltipOptions = value;
        }
    }
    visibleElementsCreateToolsPointWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                createTools: {
                    ...this.widget.visibleElements.createTools,
                    point: value,
                },
            };
        }
    }
    visibleElementsCreateToolsPolylineWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                createTools: {
                    ...this.widget.visibleElements.createTools,
                    polyline: value,
                },
            };
        }
    }
    visibleElementsCreateToolsPolygonWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                createTools: {
                    ...this.widget.visibleElements.createTools,
                    polygon: value,
                },
            };
        }
    }
    visibleElementsCreateToolsRectangleWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                createTools: {
                    ...this.widget.visibleElements.createTools,
                    rectangle: value,
                },
            };
        }
    }
    visibleElementsCreateToolsCircleWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                createTools: {
                    ...this.widget.visibleElements.createTools,
                    circle: value,
                },
            };
        }
    }
    visibleElementsDuplicateButtonWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                duplicateButton: value,
            };
        }
    }
    visibleElementsSelectionToolsRectangleWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                selectionTools: {
                    ...this.widget.visibleElements.selectionTools,
                    "rectangle-selection": value,
                },
            };
        }
    }
    visibleElementsSelectionToolsLassoWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                selectionTools: {
                    ...this.widget.visibleElements.selectionTools,
                    "lasso-selection": value,
                },
            };
        }
    }
    visibleElementsSettingsMenuWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                settingsMenu: value,
            };
        }
    }
    visibleElementsLabelsToggleWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                labelsToggle: value,
            };
        }
    }
    visibleElementsTooltipsToggleWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                tooltipsToggle: value,
            };
        }
    }
    visibleElementsSnappingControlsWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                snappingControls: value,
            };
        }
    }
    visibleElementsSnappingControlsElementsHeaderWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                snappingControlsElements: {
                    header: value,
                },
            };
        }
    }
    visibleElementsSnappingControlsElementsEnabledToggleWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                snappingControlsElements: {
                    enabledToggle: value,
                },
            };
        }
    }
    visibleElementsSnappingControlsElementsSelfEnabledToggleWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                snappingControlsElements: {
                    selfEnabledToggle: value,
                },
            };
        }
    }
    visibleElementsSnappingControlsElementsFeatureEnabledToggleWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                snappingControlsElements: {
                    featureEnabledToggle: value,
                },
            };
        }
    }
    visibleElementsSnappingControlsElementsLayerListWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                snappingControlsElements: {
                    layerList: value,
                },
            };
        }
    }
    visibleElementsUndoRedoMenuWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                undoRedoMenu: value,
            };
        }
    }
    positionWatcher(value) {
        if (value !== undefined && this.widget) {
            this.view.ui.move(this.childElem, value);
        }
    }
    viewWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.view = value;
            this.widget.view.map?.add(this.layer);
        }
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    async cancel() {
        this.widget?.cancel();
    }
    async complete() {
        this.widget?.complete();
    }
    async create(tool, createOptions) {
        this.widget?.create(tool, createOptions);
    }
    async delete() {
        this.widget?.delete();
    }
    async duplicate() {
        this.widget?.duplicate();
    }
    async redo() {
        this.widget?.redo();
    }
    async undo() {
        this.widget?.undo();
    }
    async update(graphic, updateOptions) {
        return void this.widget?.update(graphic, updateOptions);
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    async componentDidLoad() {
        const params = await this._createParams();
        const widget = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.V)(params);
        this.widget = widget;
        this._setViewModelParams();
        await this._addWatchers();
        this._proxyEvents();
        this._addContainer();
        this.arcgisSketchReady.emit();
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
    }
    disconnectedCallback() {
        (0,_disconnected_6cf1c100_js__WEBPACK_IMPORTED_MODULE_3__.o)(this);
    }
    render() {
        return (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { ref: (el) => (this.childElem = el) });
    }
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    _addContainer() {
        this.widget.container = this.childElem;
    }
    async _addWatchers() {
        const { watch } = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.i)();
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.activeTool, (value) => (this.activeTool = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.createGraphic, (value) => (this.createGraphic = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.updateGraphics, (value) => (this.updateGraphics = value), {
            initial: true,
        }));
    }
    async _createParams() {
        const graphicsLayerProps = {
            title: "Sketch Layer",
            creationMode: "update",
        };
        this.layer || (this.layer = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.W)(graphicsLayerProps));
        const params = {
            layer: this.layer,
        };
        params.visibleElements = {
            createTools: {
                point: this.visibleElementsCreateToolsPoint,
                polyline: this.visibleElementsCreateToolsPolyline,
                polygon: this.visibleElementsCreateToolsPolygon,
                rectangle: this.visibleElementsCreateToolsRectangle,
                circle: this.visibleElementsCreateToolsCircle,
            },
            duplicateButton: this.visibleElementsDuplicateButton,
            selectionTools: {
                "rectangle-selection": this.visibleElementsSelectionToolsRectangle,
                "lasso-selection": this.visibleElementsSelectionToolsLasso,
            },
            settingsMenu: this.visibleElementsSettingsMenu,
            labelsToggle: this.visibleElementsLabelsToggle,
            tooltipsToggle: this.visibleElementsTooltipsToggle,
            snappingControls: this.visibleElementsSnappingControls,
            snappingControlsElements: {
                header: this.visibleElementsSnappingControlsElementsHeader,
                enabledToggle: this.visibleElementsSnappingControlsElementsEnabledToggle,
                selfEnabledToggle: this.visibleElementsSnappingControlsElementsSelfEnabledToggle,
                featureEnabledToggle: this.visibleElementsSnappingControlsElementsFeatureEnabledToggle,
                layerList: this.visibleElementsSnappingControlsElementsLayerList,
            },
            undoRedoMenu: this.visibleElementsUndoRedoMenu,
        };
        if (this.view) {
            params.view = this.view;
        }
        if (this.availableCreateTools) {
            params.availableCreateTools = this.availableCreateTools;
        }
        if (this.creationMode) {
            params.creationMode = this.creationMode;
        }
        if (this.defaultCreateOptions) {
            params.defaultCreateOptions = this.defaultCreateOptions;
        }
        if (this.defaultUpdateOptions) {
            params.defaultUpdateOptions = this.defaultUpdateOptions;
        }
        if (this.labelOptions) {
            params.labelOptions = this.labelOptions;
        }
        if (this.layout) {
            params.layout = this.layout;
        }
        if (this.snappingOptions) {
            params.snappingOptions = this.snappingOptions;
        }
        if (this.tooltipOptions) {
            params.tooltipOptions = this.tooltipOptions;
        }
        return params;
    }
    _setViewModelParams() {
        const params = {};
        if (this.pointSymbol) {
            params.pointSymbol = this.pointSymbol;
        }
        if (this.polylineSymbol) {
            params.polylineSymbol = this.polylineSymbol;
        }
        if (this.polygonSymbol) {
            params.polygonSymbol = this.polygonSymbol;
        }
        this.widget.viewModel.set(params);
    }
    _proxyEvents() {
        this.widget.on("create", (e) => this.sketchCreate.emit(e));
        this.widget.on("delete", (e) => this.sketchDelete.emit(e));
        this.widget.on("redo", (e) => this.sketchRedo.emit(e));
        this.widget.on("undo", (e) => this.sketchUndo.emit(e));
        this.widget.on("update", (e) => this.sketchUpdate.emit(e));
    }
    get el() { return (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get watchers() { return {
        "referenceElement": ["referenceElementWatcher"],
        "availableCreateTools": ["availableCreateToolsWatcher"],
        "creationMode": ["creationModeWatcher"],
        "defaultCreateOptions": ["defaultCreateOptionsWatcher"],
        "defaultUpdateOptions": ["defaultUpdateOptionsWatcher"],
        "icon": ["iconWatcher"],
        "labelOptions": ["labelOptionsWatcher"],
        "layer": ["layerWatcher"],
        "layout": ["layoutWatcher"],
        "pointSymbol": ["pointSymbolWatcher"],
        "polylineSymbol": ["polylineSymbolWatcher"],
        "polygonSymbol": ["polygonSymbolWatcher"],
        "snappingOptions": ["snappingOptionsWatcher"],
        "tooltipOptions": ["tooltipOptionsWatcher"],
        "visibleElementsCreateToolsPoint": ["visibleElementsCreateToolsPointWatcher"],
        "visibleElementsCreateToolsPolyline": ["visibleElementsCreateToolsPolylineWatcher"],
        "visibleElementsCreateToolsPolygon": ["visibleElementsCreateToolsPolygonWatcher"],
        "visibleElementsCreateToolsRectangle": ["visibleElementsCreateToolsRectangleWatcher"],
        "visibleElementsCreateToolsCircle": ["visibleElementsCreateToolsCircleWatcher"],
        "visibleElementsDuplicateButton": ["visibleElementsDuplicateButtonWatcher"],
        "visibleElementsSelectionToolsRectangle": ["visibleElementsSelectionToolsRectangleWatcher"],
        "visibleElementsSelectionToolsLasso": ["visibleElementsSelectionToolsLassoWatcher"],
        "visibleElementsSettingsMenu": ["visibleElementsSettingsMenuWatcher"],
        "visibleElementsLabelsToggle": ["visibleElementsLabelsToggleWatcher"],
        "visibleElementsTooltipsToggle": ["visibleElementsTooltipsToggleWatcher"],
        "visibleElementsSnappingControls": ["visibleElementsSnappingControlsWatcher"],
        "visibleElementsSnappingControlsElementsHeader": ["visibleElementsSnappingControlsElementsHeaderWatcher"],
        "visibleElementsSnappingControlsElementsEnabledToggle": ["visibleElementsSnappingControlsElementsEnabledToggleWatcher"],
        "visibleElementsSnappingControlsElementsSelfEnabledToggle": ["visibleElementsSnappingControlsElementsSelfEnabledToggleWatcher"],
        "visibleElementsSnappingControlsElementsFeatureEnabledToggle": ["visibleElementsSnappingControlsElementsFeatureEnabledToggleWatcher"],
        "visibleElementsSnappingControlsElementsLayerList": ["visibleElementsSnappingControlsElementsLayerListWatcher"],
        "visibleElementsUndoRedoMenu": ["visibleElementsUndoRedoMenuWatcher"],
        "position": ["positionWatcher"],
        "view": ["viewWatcher"]
    }; }
};
ArcgisSketch.style = sketchCss;




/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ addHandles),
/* harmony export */   b: () => (/* binding */ isNotSameViewpoint),
/* harmony export */   c: () => (/* binding */ checkForView),
/* harmony export */   d: () => (/* binding */ checkForExpand),
/* harmony export */   e: () => (/* binding */ isNotSameCamera),
/* harmony export */   f: () => (/* binding */ isNotSameEnvironment),
/* harmony export */   g: () => (/* binding */ isValidInteger),
/* harmony export */   i: () => (/* binding */ isNullOrEmptyString),
/* harmony export */   r: () => (/* binding */ referenceElementHelper)
/* harmony export */ });
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */
function checkForExpand(element) {
    const expandRef = element.el.closest("arcgis-expand") ?? element.expandElem;
    if (expandRef?.widget) {
        element.view = expandRef.view;
        expandRef.widget.content = element.childElem ?? element.el;
        // TODO: Update to be expandIcon = widget.icon, not ready yet in 4.27next
        if (!expandRef.expandIcon) {
            expandRef.widget.expandIcon = element.widget ? element.widget.icon : element?.icon;
        }
        return true;
    }
    if (expandRef) {
        const widgetHandler = () => {
            expandRef.removeEventListener("arcgisExpandReady", widgetHandler, false);
            element.view = expandRef.view;
            expandRef.widget.content = element.childElem ?? element.el;
            if (!expandRef.expandIcon) {
                expandRef.widget.expandIcon = element.widget ? element.widget.icon : element?.icon;
            }
        };
        expandRef.addEventListener("arcgisExpandReady", widgetHandler, false);
        return true;
    }
    return false;
}

//--------------------------------------------------------------------------
//
//  Public Methods
//
//--------------------------------------------------------------------------
function addHandles(element, handle) {
    if (Array.isArray(handle)) {
        element._watchHandles = [...element._watchHandles, ...handle];
    }
    else {
        element._watchHandles.push(handle);
    }
}
function checkForView(element) {
    let isUsingReferenceElement = false;
    if (!checkForExpand(element)) {
        let viewRef = element.el.closest("arcgis-map") ?? element.el.closest("arcgis-scene");
        if (!viewRef && typeof element.referenceElement === "string") {
            viewRef = document.querySelector(element.referenceElement);
            isUsingReferenceElement = true;
        }
        if (viewRef?.view) {
            element.view = viewRef.view;
            const el = element.childElem ?? element.el;
            if (!isUsingReferenceElement) {
                element.view.ui.add(el, element.position);
            }
        }
        else if (viewRef) {
            waitForViewHandler(viewRef, element, isUsingReferenceElement);
        }
    }
    else {
        const viewRef = element.el.closest("arcgis-map") ?? element.el.closest("arcgis-scene");
        if (viewRef?.view) {
            element.view = viewRef.view;
        }
        else if (viewRef) {
            const handler = () => {
                viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
                element.view = viewRef.view;
            };
            viewRef.addEventListener("arcgisViewReadyChange", handler, false);
        }
    }
}
function isNullOrEmptyString(value) {
    return value === undefined || value === null || value === "";
}
function isValidInteger(value) {
    return value != null && value % 1 === 0;
}
function isNotSameCamera(camera, camera2) {
    return (camera2 === undefined ||
        camera.position !== camera2.position ||
        camera.heading !== camera2.heading ||
        camera.tilt !== camera2.tilt);
}
function isNotSameEnvironment(environment, environment2) {
    return (environment2 === undefined ||
        environment2.atmosphereEnabled !== environment.atmosphereEnabled ||
        environment2.lighting.date !== environment.lighting.date ||
        environment2.lighting.directShadowsEnabled !==
            environment.lighting.directShadowsEnabled ||
        environment2.lighting.cameraTrackingEnabled !==
            environment.lighting.cameraTrackingEnabled ||
        environment2.lighting.date !== environment.lighting.date ||
        environment2.lighting.displayUTCOffset !==
            environment.lighting.displayUTCOffset);
}
function isNotSameViewpoint(viewpoint, viewpoint2) {
    return (viewpoint2 === undefined ||
        viewpoint.targetGeometry !== viewpoint2.targetGeometry ||
        viewpoint.rotation !== viewpoint2.rotation ||
        viewpoint.scale !== viewpoint2.scale);
}
async function updateForView(viewStr) {
    const viewRef = document.querySelector(viewStr);
    return await new Promise((resolve) => {
        if (viewRef?.view !== undefined) {
            resolve(viewRef.view);
        }
        else if (viewRef) {
            const handler = () => {
                viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
                resolve(viewRef.view);
            };
            viewRef.addEventListener("arcgisViewReadyChange", handler, false);
        }
    });
}
async function referenceElementHelper(element, refElement) {
    if (refElement === undefined)
        return;
    else if (typeof refElement === "string") {
        element.view = await updateForView(refElement);
    }
    else if (element.widget) {
        element.view = refElement.view;
    }
}
//--------------------------------------------------------------------------
//
//  Private Methods
//
//--------------------------------------------------------------------------
function waitForViewHandler(viewRef, element, isUsingRefernceElement) {
    const handler = () => {
        viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
        element.view = viewRef.view;
        if (!isUsingRefernceElement) {
            element.view.ui.add(element.childElem ?? element.el, element.position);
        }
    };
    viewRef.addEventListener("arcgisViewReadyChange", handler, false);
}




/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   o: () => (/* binding */ onDisconnectedHelper)
/* harmony export */ });
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */
function onDisconnectedHelper(element) {
    if (element.childElem) {
        if (!element.el.isConnected) {
            if (element.view) {
                element.view.ui.remove(element.childElem);
            }
            else if (element.widget?.view) {
                element.widget.view.ui.remove(element.childElem);
            }
            if (element._watchHandles) {
                element._watchHandles.forEach((handle) => {
                    handle.remove();
                });
            }
            element._watchHandles = [];
            element.widget?.destroy();
        }
    }
    else {
        setTimeout(() => {
            if (!element.el.isConnected) {
                if (element.view) {
                    element.view.ui.remove(element.el);
                }
                else if (element.widget?.view) {
                    element.widget.view.ui.remove(element.el);
                }
                if (element._watchHandles) {
                    element._watchHandles.forEach((handle) => {
                        handle.remove();
                    });
                }
                element._watchHandles = [];
                element.widget?.destroy();
            }
        }, 1000);
    }
}




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,