"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_map-components_dist_esm_arcgis-navigation-toggle_entry_js"],{

/***/ "./node_modules/@arcgis/map-components/dist/esm/arcgis-navigation-toggle.entry.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/arcgis-navigation-toggle.entry.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_navigation_toggle: () => (/* binding */ ArcgisNavigationToggle)
/* harmony export */ });
/* harmony import */ var _index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-6e172aac.js */ "./node_modules/@arcgis/map-components/dist/esm/index-6e172aac.js");
/* harmony import */ var _index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-0bc55ca5.js */ "./node_modules/@arcgis/map-components/dist/esm/index-0bc55ca5.js");
/* harmony import */ var _component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./component-utils-23194f7c.js */ "./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js");
/* harmony import */ var _disconnected_6cf1c100_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./disconnected-6cf1c100.js */ "./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js");
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */





const navigationToggleCss = "arcgis-navigation-toggle{}";

const ArcgisNavigationToggle = class {
    constructor(hostRef) {
        (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisNavigationToggleReady = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisNavigationToggleReady", 7);
        this._watchHandles = [];
        this.referenceElement = undefined;
        this.layout = "vertical";
        this.position = "bottom-left";
        this.view = undefined;
        this.widget = undefined;
    }
    referenceElementWatcher(value) {
        void (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.r)(this, value);
    }
    layoutWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.layout = value;
        }
    }
    positionWatcher(value) {
        if (value !== undefined && this.widget) {
            this.view.ui.move(this.childElem, value);
        }
    }
    viewWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.view = value;
        }
    }
    //--------------------------------------------------------------------------
    //
    //  Watchers
    //
    //--------------------------------------------------------------------------
    async toggle() {
        this.widget?.toggle();
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    async componentDidLoad() {
        const params = this._createParams();
        const widget = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.N)(params);
        this.widget = widget;
        this._addContainer();
        this.arcgisNavigationToggleReady.emit();
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
    }
    disconnectedCallback() {
        (0,_disconnected_6cf1c100_js__WEBPACK_IMPORTED_MODULE_3__.o)(this);
    }
    render() {
        return (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { ref: (el) => (this.childElem = el) });
    }
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    _addContainer() {
        this.widget.container = this.childElem;
    }
    _createParams() {
        const params = {};
        if (this.layout) {
            params.layout = this.layout;
        }
        if (this.view) {
            params.view = this.view;
        }
        return params;
    }
    get el() { return (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get watchers() { return {
        "referenceElement": ["referenceElementWatcher"],
        "layout": ["layoutWatcher"],
        "position": ["positionWatcher"],
        "view": ["viewWatcher"]
    }; }
};
ArcgisNavigationToggle.style = navigationToggleCss;




/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ addHandles),
/* harmony export */   b: () => (/* binding */ isNotSameViewpoint),
/* harmony export */   c: () => (/* binding */ checkForView),
/* harmony export */   d: () => (/* binding */ checkForExpand),
/* harmony export */   e: () => (/* binding */ isNotSameCamera),
/* harmony export */   f: () => (/* binding */ isNotSameEnvironment),
/* harmony export */   g: () => (/* binding */ isValidInteger),
/* harmony export */   i: () => (/* binding */ isNullOrEmptyString),
/* harmony export */   r: () => (/* binding */ referenceElementHelper)
/* harmony export */ });
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */
function checkForExpand(element) {
    const expandRef = element.el.closest("arcgis-expand") ?? element.expandElem;
    if (expandRef?.widget) {
        element.view = expandRef.view;
        expandRef.widget.content = element.childElem ?? element.el;
        // TODO: Update to be expandIcon = widget.icon, not ready yet in 4.27next
        if (!expandRef.expandIcon) {
            expandRef.widget.expandIcon = element.widget ? element.widget.icon : element?.icon;
        }
        return true;
    }
    if (expandRef) {
        const widgetHandler = () => {
            expandRef.removeEventListener("arcgisExpandReady", widgetHandler, false);
            element.view = expandRef.view;
            expandRef.widget.content = element.childElem ?? element.el;
            if (!expandRef.expandIcon) {
                expandRef.widget.expandIcon = element.widget ? element.widget.icon : element?.icon;
            }
        };
        expandRef.addEventListener("arcgisExpandReady", widgetHandler, false);
        return true;
    }
    return false;
}

//--------------------------------------------------------------------------
//
//  Public Methods
//
//--------------------------------------------------------------------------
function addHandles(element, handle) {
    if (Array.isArray(handle)) {
        element._watchHandles = [...element._watchHandles, ...handle];
    }
    else {
        element._watchHandles.push(handle);
    }
}
function checkForView(element) {
    let isUsingReferenceElement = false;
    if (!checkForExpand(element)) {
        let viewRef = element.el.closest("arcgis-map") ?? element.el.closest("arcgis-scene");
        if (!viewRef && typeof element.referenceElement === "string") {
            viewRef = document.querySelector(element.referenceElement);
            isUsingReferenceElement = true;
        }
        if (viewRef?.view) {
            element.view = viewRef.view;
            const el = element.childElem ?? element.el;
            if (!isUsingReferenceElement) {
                element.view.ui.add(el, element.position);
            }
        }
        else if (viewRef) {
            waitForViewHandler(viewRef, element, isUsingReferenceElement);
        }
    }
    else {
        const viewRef = element.el.closest("arcgis-map") ?? element.el.closest("arcgis-scene");
        if (viewRef?.view) {
            element.view = viewRef.view;
        }
        else if (viewRef) {
            const handler = () => {
                viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
                element.view = viewRef.view;
            };
            viewRef.addEventListener("arcgisViewReadyChange", handler, false);
        }
    }
}
function isNullOrEmptyString(value) {
    return value === undefined || value === null || value === "";
}
function isValidInteger(value) {
    return value != null && value % 1 === 0;
}
function isNotSameCamera(camera, camera2) {
    return (camera2 === undefined ||
        camera.position !== camera2.position ||
        camera.heading !== camera2.heading ||
        camera.tilt !== camera2.tilt);
}
function isNotSameEnvironment(environment, environment2) {
    return (environment2 === undefined ||
        environment2.atmosphereEnabled !== environment.atmosphereEnabled ||
        environment2.lighting.date !== environment.lighting.date ||
        environment2.lighting.directShadowsEnabled !==
            environment.lighting.directShadowsEnabled ||
        environment2.lighting.cameraTrackingEnabled !==
            environment.lighting.cameraTrackingEnabled ||
        environment2.lighting.date !== environment.lighting.date ||
        environment2.lighting.displayUTCOffset !==
            environment.lighting.displayUTCOffset);
}
function isNotSameViewpoint(viewpoint, viewpoint2) {
    return (viewpoint2 === undefined ||
        viewpoint.targetGeometry !== viewpoint2.targetGeometry ||
        viewpoint.rotation !== viewpoint2.rotation ||
        viewpoint.scale !== viewpoint2.scale);
}
async function updateForView(viewStr) {
    const viewRef = document.querySelector(viewStr);
    return await new Promise((resolve) => {
        if (viewRef?.view !== undefined) {
            resolve(viewRef.view);
        }
        else if (viewRef) {
            const handler = () => {
                viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
                resolve(viewRef.view);
            };
            viewRef.addEventListener("arcgisViewReadyChange", handler, false);
        }
    });
}
async function referenceElementHelper(element, refElement) {
    if (refElement === undefined)
        return;
    else if (typeof refElement === "string") {
        element.view = await updateForView(refElement);
    }
    else if (element.widget) {
        element.view = refElement.view;
    }
}
//--------------------------------------------------------------------------
//
//  Private Methods
//
//--------------------------------------------------------------------------
function waitForViewHandler(viewRef, element, isUsingRefernceElement) {
    const handler = () => {
        viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
        element.view = viewRef.view;
        if (!isUsingRefernceElement) {
            element.view.ui.add(element.childElem ?? element.el, element.position);
        }
    };
    viewRef.addEventListener("arcgisViewReadyChange", handler, false);
}




/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   o: () => (/* binding */ onDisconnectedHelper)
/* harmony export */ });
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */
function onDisconnectedHelper(element) {
    if (element.childElem) {
        if (!element.el.isConnected) {
            if (element.view) {
                element.view.ui.remove(element.childElem);
            }
            else if (element.widget?.view) {
                element.widget.view.ui.remove(element.childElem);
            }
            if (element._watchHandles) {
                element._watchHandles.forEach((handle) => {
                    handle.remove();
                });
            }
            element._watchHandles = [];
            element.widget?.destroy();
        }
    }
    else {
        setTimeout(() => {
            if (!element.el.isConnected) {
                if (element.view) {
                    element.view.ui.remove(element.el);
                }
                else if (element.widget?.view) {
                    element.widget.view.ui.remove(element.el);
                }
                if (element._watchHandles) {
                    element._watchHandles.forEach((handle) => {
                        handle.remove();
                    });
                }
                element._watchHandles = [];
                element.widget?.destroy();
            }
        }, 1000);
    }
}




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfYXJjZ2lzX21hcC1jb21wb25lbnRzX2Rpc3RfZXNtX2FyY2dpcy1uYXZpZ2F0aW9uLXRvZ2dsZV9lbnRyeV9qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0c7QUFDNUI7QUFDeUI7QUFDeEI7O0FBRXZFLHVEQUF1RDs7QUFFdkQ7QUFDQTtBQUNBLFFBQVEscURBQWdCO0FBQ3hCLDJDQUEyQyxxREFBVztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSwrREFBc0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIscURBQTBCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsK0RBQVk7QUFDcEI7QUFDQTtBQUNBLFFBQVEsNERBQW9CO0FBQzVCO0FBQ0E7QUFDQSxlQUFlLHFEQUFDLFVBQVUsb0NBQW9DO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxPQUFPLHFEQUFVO0FBQ2hDLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFOEQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDaEc5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV5Tjs7Ozs7Ozs7Ozs7Ozs7O0FDcEp6TjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvbWFwLWNvbXBvbmVudHMvZGlzdC9lc20vYXJjZ2lzLW5hdmlnYXRpb24tdG9nZ2xlLmVudHJ5LmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9tYXAtY29tcG9uZW50cy9kaXN0L2VzbS9jb21wb25lbnQtdXRpbHMtMjMxOTRmN2MuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL21hcC1jb21wb25lbnRzL2Rpc3QvZXNtL2Rpc2Nvbm5lY3RlZC02Y2YxYzEwMC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRXNyaSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG4gKiBTZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMzAvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuICogdjQuMzAuMC1uZXh0LjM3XG4gKi9cbmltcG9ydCB7IHIgYXMgcmVnaXN0ZXJJbnN0YW5jZSwgYyBhcyBjcmVhdGVFdmVudCwgaCwgZyBhcyBnZXRFbGVtZW50IH0gZnJvbSAnLi9pbmRleC02ZTE3MmFhYy5qcyc7XG5pbXBvcnQgeyBOIGFzIG5ld1dpZGdldHNOYXZpZ2F0aW9uVG9nZ2xlIH0gZnJvbSAnLi9pbmRleC0wYmM1NWNhNS5qcyc7XG5pbXBvcnQgeyByIGFzIHJlZmVyZW5jZUVsZW1lbnRIZWxwZXIsIGMgYXMgY2hlY2tGb3JWaWV3IH0gZnJvbSAnLi9jb21wb25lbnQtdXRpbHMtMjMxOTRmN2MuanMnO1xuaW1wb3J0IHsgbyBhcyBvbkRpc2Nvbm5lY3RlZEhlbHBlciB9IGZyb20gJy4vZGlzY29ubmVjdGVkLTZjZjFjMTAwLmpzJztcblxuY29uc3QgbmF2aWdhdGlvblRvZ2dsZUNzcyA9IFwiYXJjZ2lzLW5hdmlnYXRpb24tdG9nZ2xle31cIjtcblxuY29uc3QgQXJjZ2lzTmF2aWdhdGlvblRvZ2dsZSA9IGNsYXNzIHtcbiAgICBjb25zdHJ1Y3Rvcihob3N0UmVmKSB7XG4gICAgICAgIHJlZ2lzdGVySW5zdGFuY2UodGhpcywgaG9zdFJlZik7XG4gICAgICAgIHRoaXMuYXJjZ2lzTmF2aWdhdGlvblRvZ2dsZVJlYWR5ID0gY3JlYXRlRXZlbnQodGhpcywgXCJhcmNnaXNOYXZpZ2F0aW9uVG9nZ2xlUmVhZHlcIiwgNyk7XG4gICAgICAgIHRoaXMuX3dhdGNoSGFuZGxlcyA9IFtdO1xuICAgICAgICB0aGlzLnJlZmVyZW5jZUVsZW1lbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMubGF5b3V0ID0gXCJ2ZXJ0aWNhbFwiO1xuICAgICAgICB0aGlzLnBvc2l0aW9uID0gXCJib3R0b20tbGVmdFwiO1xuICAgICAgICB0aGlzLnZpZXcgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMud2lkZ2V0ID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZWZlcmVuY2VFbGVtZW50V2F0Y2hlcih2YWx1ZSkge1xuICAgICAgICB2b2lkIHJlZmVyZW5jZUVsZW1lbnRIZWxwZXIodGhpcywgdmFsdWUpO1xuICAgIH1cbiAgICBsYXlvdXRXYXRjaGVyKHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkICYmIHRoaXMud2lkZ2V0KSB7XG4gICAgICAgICAgICB0aGlzLndpZGdldC5sYXlvdXQgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwb3NpdGlvbldhdGNoZXIodmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdGhpcy53aWRnZXQpIHtcbiAgICAgICAgICAgIHRoaXMudmlldy51aS5tb3ZlKHRoaXMuY2hpbGRFbGVtLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmlld1dhdGNoZXIodmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdGhpcy53aWRnZXQpIHtcbiAgICAgICAgICAgIHRoaXMud2lkZ2V0LnZpZXcgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy9cbiAgICAvLyAgV2F0Y2hlcnNcbiAgICAvL1xuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBhc3luYyB0b2dnbGUoKSB7XG4gICAgICAgIHRoaXMud2lkZ2V0Py50b2dnbGUoKTtcbiAgICB9XG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vXG4gICAgLy8gIExpZmVjeWNsZVxuICAgIC8vXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIGFzeW5jIGNvbXBvbmVudERpZExvYWQoKSB7XG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuX2NyZWF0ZVBhcmFtcygpO1xuICAgICAgICBjb25zdCB3aWRnZXQgPSBhd2FpdCBuZXdXaWRnZXRzTmF2aWdhdGlvblRvZ2dsZShwYXJhbXMpO1xuICAgICAgICB0aGlzLndpZGdldCA9IHdpZGdldDtcbiAgICAgICAgdGhpcy5fYWRkQ29udGFpbmVyKCk7XG4gICAgICAgIHRoaXMuYXJjZ2lzTmF2aWdhdGlvblRvZ2dsZVJlYWR5LmVtaXQoKTtcbiAgICAgICAgY2hlY2tGb3JWaWV3KHRoaXMpO1xuICAgIH1cbiAgICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAgICAgb25EaXNjb25uZWN0ZWRIZWxwZXIodGhpcyk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIGgoXCJkaXZcIiwgeyByZWY6IChlbCkgPT4gKHRoaXMuY2hpbGRFbGVtID0gZWwpIH0pO1xuICAgIH1cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy9cbiAgICAvLyAgUHJpdmF0ZSBNZXRob2RzXG4gICAgLy9cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgX2FkZENvbnRhaW5lcigpIHtcbiAgICAgICAgdGhpcy53aWRnZXQuY29udGFpbmVyID0gdGhpcy5jaGlsZEVsZW07XG4gICAgfVxuICAgIF9jcmVhdGVQYXJhbXMoKSB7XG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IHt9O1xuICAgICAgICBpZiAodGhpcy5sYXlvdXQpIHtcbiAgICAgICAgICAgIHBhcmFtcy5sYXlvdXQgPSB0aGlzLmxheW91dDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy52aWV3KSB7XG4gICAgICAgICAgICBwYXJhbXMudmlldyA9IHRoaXMudmlldztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGFyYW1zO1xuICAgIH1cbiAgICBnZXQgZWwoKSB7IHJldHVybiBnZXRFbGVtZW50KHRoaXMpOyB9XG4gICAgc3RhdGljIGdldCB3YXRjaGVycygpIHsgcmV0dXJuIHtcbiAgICAgICAgXCJyZWZlcmVuY2VFbGVtZW50XCI6IFtcInJlZmVyZW5jZUVsZW1lbnRXYXRjaGVyXCJdLFxuICAgICAgICBcImxheW91dFwiOiBbXCJsYXlvdXRXYXRjaGVyXCJdLFxuICAgICAgICBcInBvc2l0aW9uXCI6IFtcInBvc2l0aW9uV2F0Y2hlclwiXSxcbiAgICAgICAgXCJ2aWV3XCI6IFtcInZpZXdXYXRjaGVyXCJdXG4gICAgfTsgfVxufTtcbkFyY2dpc05hdmlnYXRpb25Ub2dnbGUuc3R5bGUgPSBuYXZpZ2F0aW9uVG9nZ2xlQ3NzO1xuXG5leHBvcnQgeyBBcmNnaXNOYXZpZ2F0aW9uVG9nZ2xlIGFzIGFyY2dpc19uYXZpZ2F0aW9uX3RvZ2dsZSB9O1xuIiwiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVzcmksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjMwL2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiAqIHY0LjMwLjAtbmV4dC4zN1xuICovXG5mdW5jdGlvbiBjaGVja0ZvckV4cGFuZChlbGVtZW50KSB7XG4gICAgY29uc3QgZXhwYW5kUmVmID0gZWxlbWVudC5lbC5jbG9zZXN0KFwiYXJjZ2lzLWV4cGFuZFwiKSA/PyBlbGVtZW50LmV4cGFuZEVsZW07XG4gICAgaWYgKGV4cGFuZFJlZj8ud2lkZ2V0KSB7XG4gICAgICAgIGVsZW1lbnQudmlldyA9IGV4cGFuZFJlZi52aWV3O1xuICAgICAgICBleHBhbmRSZWYud2lkZ2V0LmNvbnRlbnQgPSBlbGVtZW50LmNoaWxkRWxlbSA/PyBlbGVtZW50LmVsO1xuICAgICAgICAvLyBUT0RPOiBVcGRhdGUgdG8gYmUgZXhwYW5kSWNvbiA9IHdpZGdldC5pY29uLCBub3QgcmVhZHkgeWV0IGluIDQuMjduZXh0XG4gICAgICAgIGlmICghZXhwYW5kUmVmLmV4cGFuZEljb24pIHtcbiAgICAgICAgICAgIGV4cGFuZFJlZi53aWRnZXQuZXhwYW5kSWNvbiA9IGVsZW1lbnQud2lkZ2V0ID8gZWxlbWVudC53aWRnZXQuaWNvbiA6IGVsZW1lbnQ/Lmljb247XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChleHBhbmRSZWYpIHtcbiAgICAgICAgY29uc3Qgd2lkZ2V0SGFuZGxlciA9ICgpID0+IHtcbiAgICAgICAgICAgIGV4cGFuZFJlZi5yZW1vdmVFdmVudExpc3RlbmVyKFwiYXJjZ2lzRXhwYW5kUmVhZHlcIiwgd2lkZ2V0SGFuZGxlciwgZmFsc2UpO1xuICAgICAgICAgICAgZWxlbWVudC52aWV3ID0gZXhwYW5kUmVmLnZpZXc7XG4gICAgICAgICAgICBleHBhbmRSZWYud2lkZ2V0LmNvbnRlbnQgPSBlbGVtZW50LmNoaWxkRWxlbSA/PyBlbGVtZW50LmVsO1xuICAgICAgICAgICAgaWYgKCFleHBhbmRSZWYuZXhwYW5kSWNvbikge1xuICAgICAgICAgICAgICAgIGV4cGFuZFJlZi53aWRnZXQuZXhwYW5kSWNvbiA9IGVsZW1lbnQud2lkZ2V0ID8gZWxlbWVudC53aWRnZXQuaWNvbiA6IGVsZW1lbnQ/Lmljb247XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGV4cGFuZFJlZi5hZGRFdmVudExpc3RlbmVyKFwiYXJjZ2lzRXhwYW5kUmVhZHlcIiwgd2lkZ2V0SGFuZGxlciwgZmFsc2UpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vL1xuLy8gIFB1YmxpYyBNZXRob2RzXG4vL1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuZnVuY3Rpb24gYWRkSGFuZGxlcyhlbGVtZW50LCBoYW5kbGUpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShoYW5kbGUpKSB7XG4gICAgICAgIGVsZW1lbnQuX3dhdGNoSGFuZGxlcyA9IFsuLi5lbGVtZW50Ll93YXRjaEhhbmRsZXMsIC4uLmhhbmRsZV07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBlbGVtZW50Ll93YXRjaEhhbmRsZXMucHVzaChoYW5kbGUpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGNoZWNrRm9yVmlldyhlbGVtZW50KSB7XG4gICAgbGV0IGlzVXNpbmdSZWZlcmVuY2VFbGVtZW50ID0gZmFsc2U7XG4gICAgaWYgKCFjaGVja0ZvckV4cGFuZChlbGVtZW50KSkge1xuICAgICAgICBsZXQgdmlld1JlZiA9IGVsZW1lbnQuZWwuY2xvc2VzdChcImFyY2dpcy1tYXBcIikgPz8gZWxlbWVudC5lbC5jbG9zZXN0KFwiYXJjZ2lzLXNjZW5lXCIpO1xuICAgICAgICBpZiAoIXZpZXdSZWYgJiYgdHlwZW9mIGVsZW1lbnQucmVmZXJlbmNlRWxlbWVudCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgdmlld1JlZiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWxlbWVudC5yZWZlcmVuY2VFbGVtZW50KTtcbiAgICAgICAgICAgIGlzVXNpbmdSZWZlcmVuY2VFbGVtZW50ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmlld1JlZj8udmlldykge1xuICAgICAgICAgICAgZWxlbWVudC52aWV3ID0gdmlld1JlZi52aWV3O1xuICAgICAgICAgICAgY29uc3QgZWwgPSBlbGVtZW50LmNoaWxkRWxlbSA/PyBlbGVtZW50LmVsO1xuICAgICAgICAgICAgaWYgKCFpc1VzaW5nUmVmZXJlbmNlRWxlbWVudCkge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQudmlldy51aS5hZGQoZWwsIGVsZW1lbnQucG9zaXRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHZpZXdSZWYpIHtcbiAgICAgICAgICAgIHdhaXRGb3JWaWV3SGFuZGxlcih2aWV3UmVmLCBlbGVtZW50LCBpc1VzaW5nUmVmZXJlbmNlRWxlbWVudCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHZpZXdSZWYgPSBlbGVtZW50LmVsLmNsb3Nlc3QoXCJhcmNnaXMtbWFwXCIpID8/IGVsZW1lbnQuZWwuY2xvc2VzdChcImFyY2dpcy1zY2VuZVwiKTtcbiAgICAgICAgaWYgKHZpZXdSZWY/LnZpZXcpIHtcbiAgICAgICAgICAgIGVsZW1lbnQudmlldyA9IHZpZXdSZWYudmlldztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh2aWV3UmVmKSB7XG4gICAgICAgICAgICBjb25zdCBoYW5kbGVyID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHZpZXdSZWYucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFyY2dpc1ZpZXdSZWFkeUNoYW5nZVwiLCBoYW5kbGVyLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgZWxlbWVudC52aWV3ID0gdmlld1JlZi52aWV3O1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHZpZXdSZWYuYWRkRXZlbnRMaXN0ZW5lcihcImFyY2dpc1ZpZXdSZWFkeUNoYW5nZVwiLCBoYW5kbGVyLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5mdW5jdGlvbiBpc051bGxPckVtcHR5U3RyaW5nKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IFwiXCI7XG59XG5mdW5jdGlvbiBpc1ZhbGlkSW50ZWdlcih2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIHZhbHVlICUgMSA9PT0gMDtcbn1cbmZ1bmN0aW9uIGlzTm90U2FtZUNhbWVyYShjYW1lcmEsIGNhbWVyYTIpIHtcbiAgICByZXR1cm4gKGNhbWVyYTIgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICBjYW1lcmEucG9zaXRpb24gIT09IGNhbWVyYTIucG9zaXRpb24gfHxcbiAgICAgICAgY2FtZXJhLmhlYWRpbmcgIT09IGNhbWVyYTIuaGVhZGluZyB8fFxuICAgICAgICBjYW1lcmEudGlsdCAhPT0gY2FtZXJhMi50aWx0KTtcbn1cbmZ1bmN0aW9uIGlzTm90U2FtZUVudmlyb25tZW50KGVudmlyb25tZW50LCBlbnZpcm9ubWVudDIpIHtcbiAgICByZXR1cm4gKGVudmlyb25tZW50MiA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgIGVudmlyb25tZW50Mi5hdG1vc3BoZXJlRW5hYmxlZCAhPT0gZW52aXJvbm1lbnQuYXRtb3NwaGVyZUVuYWJsZWQgfHxcbiAgICAgICAgZW52aXJvbm1lbnQyLmxpZ2h0aW5nLmRhdGUgIT09IGVudmlyb25tZW50LmxpZ2h0aW5nLmRhdGUgfHxcbiAgICAgICAgZW52aXJvbm1lbnQyLmxpZ2h0aW5nLmRpcmVjdFNoYWRvd3NFbmFibGVkICE9PVxuICAgICAgICAgICAgZW52aXJvbm1lbnQubGlnaHRpbmcuZGlyZWN0U2hhZG93c0VuYWJsZWQgfHxcbiAgICAgICAgZW52aXJvbm1lbnQyLmxpZ2h0aW5nLmNhbWVyYVRyYWNraW5nRW5hYmxlZCAhPT1cbiAgICAgICAgICAgIGVudmlyb25tZW50LmxpZ2h0aW5nLmNhbWVyYVRyYWNraW5nRW5hYmxlZCB8fFxuICAgICAgICBlbnZpcm9ubWVudDIubGlnaHRpbmcuZGF0ZSAhPT0gZW52aXJvbm1lbnQubGlnaHRpbmcuZGF0ZSB8fFxuICAgICAgICBlbnZpcm9ubWVudDIubGlnaHRpbmcuZGlzcGxheVVUQ09mZnNldCAhPT1cbiAgICAgICAgICAgIGVudmlyb25tZW50LmxpZ2h0aW5nLmRpc3BsYXlVVENPZmZzZXQpO1xufVxuZnVuY3Rpb24gaXNOb3RTYW1lVmlld3BvaW50KHZpZXdwb2ludCwgdmlld3BvaW50Mikge1xuICAgIHJldHVybiAodmlld3BvaW50MiA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgIHZpZXdwb2ludC50YXJnZXRHZW9tZXRyeSAhPT0gdmlld3BvaW50Mi50YXJnZXRHZW9tZXRyeSB8fFxuICAgICAgICB2aWV3cG9pbnQucm90YXRpb24gIT09IHZpZXdwb2ludDIucm90YXRpb24gfHxcbiAgICAgICAgdmlld3BvaW50LnNjYWxlICE9PSB2aWV3cG9pbnQyLnNjYWxlKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZUZvclZpZXcodmlld1N0cikge1xuICAgIGNvbnN0IHZpZXdSZWYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHZpZXdTdHIpO1xuICAgIHJldHVybiBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBpZiAodmlld1JlZj8udmlldyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXNvbHZlKHZpZXdSZWYudmlldyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodmlld1JlZikge1xuICAgICAgICAgICAgY29uc3QgaGFuZGxlciA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICB2aWV3UmVmLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhcmNnaXNWaWV3UmVhZHlDaGFuZ2VcIiwgaGFuZGxlciwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUodmlld1JlZi52aWV3KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB2aWV3UmVmLmFkZEV2ZW50TGlzdGVuZXIoXCJhcmNnaXNWaWV3UmVhZHlDaGFuZ2VcIiwgaGFuZGxlciwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5hc3luYyBmdW5jdGlvbiByZWZlcmVuY2VFbGVtZW50SGVscGVyKGVsZW1lbnQsIHJlZkVsZW1lbnQpIHtcbiAgICBpZiAocmVmRWxlbWVudCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm47XG4gICAgZWxzZSBpZiAodHlwZW9mIHJlZkVsZW1lbnQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgZWxlbWVudC52aWV3ID0gYXdhaXQgdXBkYXRlRm9yVmlldyhyZWZFbGVtZW50KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZWxlbWVudC53aWRnZXQpIHtcbiAgICAgICAgZWxlbWVudC52aWV3ID0gcmVmRWxlbWVudC52aWV3O1xuICAgIH1cbn1cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vXG4vLyAgUHJpdmF0ZSBNZXRob2RzXG4vL1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuZnVuY3Rpb24gd2FpdEZvclZpZXdIYW5kbGVyKHZpZXdSZWYsIGVsZW1lbnQsIGlzVXNpbmdSZWZlcm5jZUVsZW1lbnQpIHtcbiAgICBjb25zdCBoYW5kbGVyID0gKCkgPT4ge1xuICAgICAgICB2aWV3UmVmLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhcmNnaXNWaWV3UmVhZHlDaGFuZ2VcIiwgaGFuZGxlciwgZmFsc2UpO1xuICAgICAgICBlbGVtZW50LnZpZXcgPSB2aWV3UmVmLnZpZXc7XG4gICAgICAgIGlmICghaXNVc2luZ1JlZmVybmNlRWxlbWVudCkge1xuICAgICAgICAgICAgZWxlbWVudC52aWV3LnVpLmFkZChlbGVtZW50LmNoaWxkRWxlbSA/PyBlbGVtZW50LmVsLCBlbGVtZW50LnBvc2l0aW9uKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmlld1JlZi5hZGRFdmVudExpc3RlbmVyKFwiYXJjZ2lzVmlld1JlYWR5Q2hhbmdlXCIsIGhhbmRsZXIsIGZhbHNlKTtcbn1cblxuZXhwb3J0IHsgYWRkSGFuZGxlcyBhcyBhLCBpc05vdFNhbWVWaWV3cG9pbnQgYXMgYiwgY2hlY2tGb3JWaWV3IGFzIGMsIGNoZWNrRm9yRXhwYW5kIGFzIGQsIGlzTm90U2FtZUNhbWVyYSBhcyBlLCBpc05vdFNhbWVFbnZpcm9ubWVudCBhcyBmLCBpc1ZhbGlkSW50ZWdlciBhcyBnLCBpc051bGxPckVtcHR5U3RyaW5nIGFzIGksIHJlZmVyZW5jZUVsZW1lbnRIZWxwZXIgYXMgciB9O1xuIiwiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVzcmksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjMwL2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiAqIHY0LjMwLjAtbmV4dC4zN1xuICovXG5mdW5jdGlvbiBvbkRpc2Nvbm5lY3RlZEhlbHBlcihlbGVtZW50KSB7XG4gICAgaWYgKGVsZW1lbnQuY2hpbGRFbGVtKSB7XG4gICAgICAgIGlmICghZWxlbWVudC5lbC5pc0Nvbm5lY3RlZCkge1xuICAgICAgICAgICAgaWYgKGVsZW1lbnQudmlldykge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQudmlldy51aS5yZW1vdmUoZWxlbWVudC5jaGlsZEVsZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZWxlbWVudC53aWRnZXQ/LnZpZXcpIHtcbiAgICAgICAgICAgICAgICBlbGVtZW50LndpZGdldC52aWV3LnVpLnJlbW92ZShlbGVtZW50LmNoaWxkRWxlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZWxlbWVudC5fd2F0Y2hIYW5kbGVzKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5fd2F0Y2hIYW5kbGVzLmZvckVhY2goKGhhbmRsZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBoYW5kbGUucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbGVtZW50Ll93YXRjaEhhbmRsZXMgPSBbXTtcbiAgICAgICAgICAgIGVsZW1lbnQud2lkZ2V0Py5kZXN0cm95KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFlbGVtZW50LmVsLmlzQ29ubmVjdGVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQudmlldykge1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnZpZXcudWkucmVtb3ZlKGVsZW1lbnQuZWwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChlbGVtZW50LndpZGdldD8udmlldykge1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LndpZGdldC52aWV3LnVpLnJlbW92ZShlbGVtZW50LmVsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuX3dhdGNoSGFuZGxlcykge1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50Ll93YXRjaEhhbmRsZXMuZm9yRWFjaCgoaGFuZGxlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGUucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbGVtZW50Ll93YXRjaEhhbmRsZXMgPSBbXTtcbiAgICAgICAgICAgICAgICBlbGVtZW50LndpZGdldD8uZGVzdHJveSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCAxMDAwKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IG9uRGlzY29ubmVjdGVkSGVscGVyIGFzIG8gfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==