"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_map-components_dist_esm_arcgis-slider_entry_js"],{

/***/ "./node_modules/@arcgis/map-components/dist/esm/arcgis-slider.entry.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/arcgis-slider.entry.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_slider: () => (/* binding */ ArcgisSlider)
/* harmony export */ });
/* harmony import */ var _index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-6e172aac.js */ "./node_modules/@arcgis/map-components/dist/esm/index-6e172aac.js");
/* harmony import */ var _index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-0bc55ca5.js */ "./node_modules/@arcgis/map-components/dist/esm/index-0bc55ca5.js");
/* harmony import */ var _component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./component-utils-23194f7c.js */ "./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js");
/* harmony import */ var _disconnected_6cf1c100_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./disconnected-6cf1c100.js */ "./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js");
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */





const sliderCss = "arcgis-slider{min-width:200px;min-height:25px}";

const ArcgisSlider = class {
    constructor(hostRef) {
        (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.sliderMaxChange = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sliderMaxChange", 7);
        this.sliderMaxClick = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sliderMaxClick", 7);
        this.sliderMinChange = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sliderMinChange", 7);
        this.sliderMinClick = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sliderMinClick", 7);
        this.sliderSegmentClick = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sliderSegmentClick", 7);
        this.sliderSegmentDrag = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sliderSegmentDrag", 7);
        this.sliderThumbChange = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sliderThumbChange", 7);
        this.sliderThumbClick = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sliderThumbClick", 7);
        this.sliderThumbDrag = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sliderThumbDrag", 7);
        this.sliderTickClick = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sliderTickClick", 7);
        this.sliderTrackClick = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "sliderTrackClick", 7);
        this.widgetReady = (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "widgetReady", 7);
        this._watchHandles = [];
        this.referenceElement = undefined;
        this.draggableSegmentsEnabled = undefined;
        this.effectiveMax = undefined;
        this.effectiveMin = undefined;
        this.effectiveSegmentElements = undefined;
        this.labelElements = undefined;
        this.labelInputsEnabled = undefined;
        this.labels = undefined;
        this.layout = "horizontal";
        this.min = undefined;
        this.max = undefined;
        this.maxLabelElement = undefined;
        this.minLabelElement = undefined;
        this.precision = undefined;
        this.rangeLabelInputsEnabled = undefined;
        this.segmentElements = undefined;
        this.snapOnClickEnabled = undefined;
        this.syncedSegmentsEnabled = undefined;
        this.thumbElements = undefined;
        this.thumbsConstrained = undefined;
        this.tickConfigs = undefined;
        this.tickElements = undefined;
        this.trackElement = undefined;
        this.steps = undefined;
        this.values = undefined;
        this.position = "bottom-left";
        this.expandable = false;
        this.widget = undefined;
    }
    draggableSegmentsEnabledWatcher(newValue) {
        if (newValue !== undefined && this.widget) {
            this.widget.draggableSegmentsEnabled = newValue;
        }
    }
    effectiveMaxWatcher(newValue) {
        if (newValue !== undefined && this.widget) {
            this.widget.effectiveMax = newValue;
        }
    }
    effectiveMinWatcher(newValue) {
        if (newValue !== undefined && this.widget) {
            this.widget.effectiveMin = newValue;
        }
    }
    layoutWatcher(newValue) {
        if (this.widget) {
            this.widget.layout = newValue;
        }
    }
    minWatcher(newValue) {
        if (newValue !== undefined && this.widget) {
            this.widget.min = newValue;
        }
    }
    maxWatcher(newValue) {
        if (newValue !== undefined && this.widget) {
            this.widget.max = newValue;
        }
    }
    precisionWatcher(newValue) {
        if (newValue !== undefined && this.widget) {
            this.widget.precision = newValue;
        }
    }
    rangeLabelInputsEnabledWatcher(newValue) {
        if (newValue !== undefined && this.widget) {
            this.widget.rangeLabelInputsEnabled = newValue;
        }
    }
    snapOnClickEnabledWatcher(newValue) {
        if (newValue !== undefined && this.widget) {
            this.widget.snapOnClickEnabled = newValue;
        }
    }
    syncedSegmentsEnabledWatcher(newValue) {
        if (newValue !== undefined && this.widget) {
            this.widget.syncedSegmentsEnabled = newValue;
        }
    }
    thumbsConstrainedWatcher(newValue) {
        if (newValue !== undefined && this.widget) {
            this.widget.thumbsConstrained = newValue;
        }
    }
    tickConfigsWatcher(newValue) {
        if (this.widget) {
            this.widget.tickConfigs = newValue;
        }
    }
    stepsWatcher(newValue) {
        if (this.widget) {
            this.widget.steps = newValue;
        }
    }
    valuesWatcher(newValue) {
        if (typeof newValue === "string") {
            this.values = newValue.split(",").map((n) => Number(n));
        }
        if (this.widget) {
            this.widget.values = this.values;
        }
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    async componentDidLoad() {
        const params = this._createParams();
        const widget = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.Y)(params);
        this.widget = widget;
        await this._addWatchers();
        this.widgetReady.emit({ widget: this.widget });
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
    }
    disconnectedCallback() {
        (0,_disconnected_6cf1c100_js__WEBPACK_IMPORTED_MODULE_3__.o)(this);
    }
    render() {
        if (this.expandable) {
            return ((0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-expand", { position: this.position, ref: (el) => (this.expandElem = el) }, (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { ref: (el) => (this.childElem = el) })));
        }
        return (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { ref: (el) => (this.childElem = el) });
    }
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    async _addWatchers() {
        const { watch } = await (0,_index_0bc55ca5_js__WEBPACK_IMPORTED_MODULE_1__.i)();
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.effectiveSegmentElements, (value) => (this.effectiveSegmentElements = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.labelElements, (value) => (this.labelElements = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.maxLabelElement, (value) => (this.maxLabelElement = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.minLabelElement, (value) => (this.minLabelElement = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.segmentElements, (value) => (this.segmentElements = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.thumbElements, (value) => (this.thumbElements = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.tickElements, (value) => (this.tickElements = value), {
            initial: true,
        }));
        (0,_component_utils_23194f7c_js__WEBPACK_IMPORTED_MODULE_2__.a)(this, watch(() => this.widget.trackElement, (value) => (this.trackElement = value), {
            initial: true,
        }));
    }
    _createParams() {
        const params = {
            container: this.childElem,
            layout: this.layout,
        };
        if (this.min !== undefined) {
            params.min = this.min;
        }
        if (this.max !== undefined) {
            params.max = this.max;
        }
        if (this.steps) {
            if (typeof this.steps === "string") {
                this.steps = this.steps.split(",").map((n) => Number(n));
            }
            params.steps = this.steps;
        }
        if (this.values) {
            if (typeof this.values === "string") {
                this.values = this.values.split(",").map((n) => Number(n));
            }
            params.values = this.values;
        }
        return params;
    }
    get el() { return (0,_index_6e172aac_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get watchers() { return {
        "draggableSegmentsEnabled": ["draggableSegmentsEnabledWatcher"],
        "effectiveMax": ["effectiveMaxWatcher"],
        "effectiveMin": ["effectiveMinWatcher"],
        "layout": ["layoutWatcher"],
        "min": ["minWatcher"],
        "max": ["maxWatcher"],
        "precision": ["precisionWatcher"],
        "rangeLabelInputsEnabled": ["rangeLabelInputsEnabledWatcher"],
        "snapOnClickEnabled": ["snapOnClickEnabledWatcher"],
        "syncedSegmentsEnabled": ["syncedSegmentsEnabledWatcher"],
        "thumbsConstrained": ["thumbsConstrainedWatcher"],
        "tickConfigs": ["tickConfigsWatcher"],
        "steps": ["stepsWatcher"],
        "values": ["valuesWatcher"]
    }; }
};
ArcgisSlider.style = sliderCss;




/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/component-utils-23194f7c.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ addHandles),
/* harmony export */   b: () => (/* binding */ isNotSameViewpoint),
/* harmony export */   c: () => (/* binding */ checkForView),
/* harmony export */   d: () => (/* binding */ checkForExpand),
/* harmony export */   e: () => (/* binding */ isNotSameCamera),
/* harmony export */   f: () => (/* binding */ isNotSameEnvironment),
/* harmony export */   g: () => (/* binding */ isValidInteger),
/* harmony export */   i: () => (/* binding */ isNullOrEmptyString),
/* harmony export */   r: () => (/* binding */ referenceElementHelper)
/* harmony export */ });
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */
function checkForExpand(element) {
    const expandRef = element.el.closest("arcgis-expand") ?? element.expandElem;
    if (expandRef?.widget) {
        element.view = expandRef.view;
        expandRef.widget.content = element.childElem ?? element.el;
        // TODO: Update to be expandIcon = widget.icon, not ready yet in 4.27next
        if (!expandRef.expandIcon) {
            expandRef.widget.expandIcon = element.widget ? element.widget.icon : element?.icon;
        }
        return true;
    }
    if (expandRef) {
        const widgetHandler = () => {
            expandRef.removeEventListener("arcgisExpandReady", widgetHandler, false);
            element.view = expandRef.view;
            expandRef.widget.content = element.childElem ?? element.el;
            if (!expandRef.expandIcon) {
                expandRef.widget.expandIcon = element.widget ? element.widget.icon : element?.icon;
            }
        };
        expandRef.addEventListener("arcgisExpandReady", widgetHandler, false);
        return true;
    }
    return false;
}

//--------------------------------------------------------------------------
//
//  Public Methods
//
//--------------------------------------------------------------------------
function addHandles(element, handle) {
    if (Array.isArray(handle)) {
        element._watchHandles = [...element._watchHandles, ...handle];
    }
    else {
        element._watchHandles.push(handle);
    }
}
function checkForView(element) {
    let isUsingReferenceElement = false;
    if (!checkForExpand(element)) {
        let viewRef = element.el.closest("arcgis-map") ?? element.el.closest("arcgis-scene");
        if (!viewRef && typeof element.referenceElement === "string") {
            viewRef = document.querySelector(element.referenceElement);
            isUsingReferenceElement = true;
        }
        if (viewRef?.view) {
            element.view = viewRef.view;
            const el = element.childElem ?? element.el;
            if (!isUsingReferenceElement) {
                element.view.ui.add(el, element.position);
            }
        }
        else if (viewRef) {
            waitForViewHandler(viewRef, element, isUsingReferenceElement);
        }
    }
    else {
        const viewRef = element.el.closest("arcgis-map") ?? element.el.closest("arcgis-scene");
        if (viewRef?.view) {
            element.view = viewRef.view;
        }
        else if (viewRef) {
            const handler = () => {
                viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
                element.view = viewRef.view;
            };
            viewRef.addEventListener("arcgisViewReadyChange", handler, false);
        }
    }
}
function isNullOrEmptyString(value) {
    return value === undefined || value === null || value === "";
}
function isValidInteger(value) {
    return value != null && value % 1 === 0;
}
function isNotSameCamera(camera, camera2) {
    return (camera2 === undefined ||
        camera.position !== camera2.position ||
        camera.heading !== camera2.heading ||
        camera.tilt !== camera2.tilt);
}
function isNotSameEnvironment(environment, environment2) {
    return (environment2 === undefined ||
        environment2.atmosphereEnabled !== environment.atmosphereEnabled ||
        environment2.lighting.date !== environment.lighting.date ||
        environment2.lighting.directShadowsEnabled !==
            environment.lighting.directShadowsEnabled ||
        environment2.lighting.cameraTrackingEnabled !==
            environment.lighting.cameraTrackingEnabled ||
        environment2.lighting.date !== environment.lighting.date ||
        environment2.lighting.displayUTCOffset !==
            environment.lighting.displayUTCOffset);
}
function isNotSameViewpoint(viewpoint, viewpoint2) {
    return (viewpoint2 === undefined ||
        viewpoint.targetGeometry !== viewpoint2.targetGeometry ||
        viewpoint.rotation !== viewpoint2.rotation ||
        viewpoint.scale !== viewpoint2.scale);
}
async function updateForView(viewStr) {
    const viewRef = document.querySelector(viewStr);
    return await new Promise((resolve) => {
        if (viewRef?.view !== undefined) {
            resolve(viewRef.view);
        }
        else if (viewRef) {
            const handler = () => {
                viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
                resolve(viewRef.view);
            };
            viewRef.addEventListener("arcgisViewReadyChange", handler, false);
        }
    });
}
async function referenceElementHelper(element, refElement) {
    if (refElement === undefined)
        return;
    else if (typeof refElement === "string") {
        element.view = await updateForView(refElement);
    }
    else if (element.widget) {
        element.view = refElement.view;
    }
}
//--------------------------------------------------------------------------
//
//  Private Methods
//
//--------------------------------------------------------------------------
function waitForViewHandler(viewRef, element, isUsingRefernceElement) {
    const handler = () => {
        viewRef.removeEventListener("arcgisViewReadyChange", handler, false);
        element.view = viewRef.view;
        if (!isUsingRefernceElement) {
            element.view.ui.add(element.childElem ?? element.el, element.position);
        }
    };
    viewRef.addEventListener("arcgisViewReadyChange", handler, false);
}




/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/esm/disconnected-6cf1c100.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   o: () => (/* binding */ onDisconnectedHelper)
/* harmony export */ });
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.37
 */
function onDisconnectedHelper(element) {
    if (element.childElem) {
        if (!element.el.isConnected) {
            if (element.view) {
                element.view.ui.remove(element.childElem);
            }
            else if (element.widget?.view) {
                element.widget.view.ui.remove(element.childElem);
            }
            if (element._watchHandles) {
                element._watchHandles.forEach((handle) => {
                    handle.remove();
                });
            }
            element._watchHandles = [];
            element.widget?.destroy();
        }
    }
    else {
        setTimeout(() => {
            if (!element.el.isConnected) {
                if (element.view) {
                    element.view.ui.remove(element.el);
                }
                else if (element.widget?.view) {
                    element.widget.view.ui.remove(element.el);
                }
                if (element._watchHandles) {
                    element._watchHandles.forEach((handle) => {
                        handle.remove();
                    });
                }
                element._watchHandles = [];
                element.widget?.destroy();
            }
        }, 1000);
    }
}




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,